package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/compute/v2/extensions/startstop"
)
//request struct for the StartStartstop
type StartStartstopRequest struct{
    id string
}

func NewStartStartstopRequest()*StartStartstopRequest{
    return &StartStartstopRequest{}
}

//response struct for the StartStartstop
type StartStartstopResponse struct{
    StartResult startstop.StartResult
}

func NewStartStartstopResponse(startResult startstop.StartResult,)*StartStartstopResponse {
    return &StartStartstopResponse{
            StartResult:startResult,
    }
}

// action function
func (oc *OpenstackClient) StartStartstop(request *StartStartstopRequest)(*StartStartstopResponse){
    return NewStartStartstopResponse(startstop.Start(oc.client,request.id, ))

}
//request struct for the StopStartstop
type StopStartstopRequest struct{
    id string
}

func NewStopStartstopRequest()*StopStartstopRequest{
    return &StopStartstopRequest{}
}

//response struct for the StopStartstop
type StopStartstopResponse struct{
    StopResult startstop.StopResult
}

func NewStopStartstopResponse(stopResult startstop.StopResult,)*StopStartstopResponse {
    return &StopStartstopResponse{
            StopResult:stopResult,
    }
}

// action function
func (oc *OpenstackClient) StopStartstop(request *StopStartstopRequest)(*StopStartstopResponse){
    return NewStopStartstopResponse(startstop.Stop(oc.client,request.id, ))

}