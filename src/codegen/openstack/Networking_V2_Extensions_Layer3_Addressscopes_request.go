package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/networking/v2/extensions/layer3/addressscopes"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the ListNetworkingV2ExtensionsLayer3Addressscopes
type ListNetworkingV2ExtensionsLayer3AddressscopesRequest struct{
    Opts addressscopes.ListOpts
}

func NewListNetworkingV2ExtensionsLayer3AddressscopesRequest()*ListNetworkingV2ExtensionsLayer3AddressscopesRequest{
    return &ListNetworkingV2ExtensionsLayer3AddressscopesRequest{}
}

//response struct for the ListNetworkingV2ExtensionsLayer3Addressscopes
type ListNetworkingV2ExtensionsLayer3AddressscopesResponse struct{
    Pager pagination.Pager
}

func NewListNetworkingV2ExtensionsLayer3AddressscopesResponse(pager pagination.Pager,)*ListNetworkingV2ExtensionsLayer3AddressscopesResponse {
    return &ListNetworkingV2ExtensionsLayer3AddressscopesResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListNetworkingV2ExtensionsLayer3Addressscopes(req *ListNetworkingV2ExtensionsLayer3AddressscopesRequest)(*ListNetworkingV2ExtensionsLayer3AddressscopesResponse){
    return NewListNetworkingV2ExtensionsLayer3AddressscopesResponse(addressscopes.List(oc.Client,req.Opts, ))

}
//request struct for the GetNetworkingV2ExtensionsLayer3Addressscopes
type GetNetworkingV2ExtensionsLayer3AddressscopesRequest struct{
    Id string
}

func NewGetNetworkingV2ExtensionsLayer3AddressscopesRequest()*GetNetworkingV2ExtensionsLayer3AddressscopesRequest{
    return &GetNetworkingV2ExtensionsLayer3AddressscopesRequest{}
}

//response struct for the GetNetworkingV2ExtensionsLayer3Addressscopes
type GetNetworkingV2ExtensionsLayer3AddressscopesResponse struct{
    GetResult addressscopes.GetResult
}

func NewGetNetworkingV2ExtensionsLayer3AddressscopesResponse(getResult addressscopes.GetResult,)*GetNetworkingV2ExtensionsLayer3AddressscopesResponse {
    return &GetNetworkingV2ExtensionsLayer3AddressscopesResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetNetworkingV2ExtensionsLayer3Addressscopes(req *GetNetworkingV2ExtensionsLayer3AddressscopesRequest)(*GetNetworkingV2ExtensionsLayer3AddressscopesResponse){
    return NewGetNetworkingV2ExtensionsLayer3AddressscopesResponse(addressscopes.Get(oc.Client,req.Id, ))

}
//request struct for the CreateNetworkingV2ExtensionsLayer3Addressscopes
type CreateNetworkingV2ExtensionsLayer3AddressscopesRequest struct{
    Opts addressscopes.CreateOpts
}

func NewCreateNetworkingV2ExtensionsLayer3AddressscopesRequest()*CreateNetworkingV2ExtensionsLayer3AddressscopesRequest{
    return &CreateNetworkingV2ExtensionsLayer3AddressscopesRequest{}
}

//response struct for the CreateNetworkingV2ExtensionsLayer3Addressscopes
type CreateNetworkingV2ExtensionsLayer3AddressscopesResponse struct{
    CreateResult addressscopes.CreateResult
}

func NewCreateNetworkingV2ExtensionsLayer3AddressscopesResponse(createResult addressscopes.CreateResult,)*CreateNetworkingV2ExtensionsLayer3AddressscopesResponse {
    return &CreateNetworkingV2ExtensionsLayer3AddressscopesResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateNetworkingV2ExtensionsLayer3Addressscopes(req *CreateNetworkingV2ExtensionsLayer3AddressscopesRequest)(*CreateNetworkingV2ExtensionsLayer3AddressscopesResponse){
    return NewCreateNetworkingV2ExtensionsLayer3AddressscopesResponse(addressscopes.Create(oc.Client,req.Opts, ))

}
//request struct for the UpdateNetworkingV2ExtensionsLayer3Addressscopes
type UpdateNetworkingV2ExtensionsLayer3AddressscopesRequest struct{
    AddressScopeID string
    Opts addressscopes.UpdateOpts
}

func NewUpdateNetworkingV2ExtensionsLayer3AddressscopesRequest()*UpdateNetworkingV2ExtensionsLayer3AddressscopesRequest{
    return &UpdateNetworkingV2ExtensionsLayer3AddressscopesRequest{}
}

//response struct for the UpdateNetworkingV2ExtensionsLayer3Addressscopes
type UpdateNetworkingV2ExtensionsLayer3AddressscopesResponse struct{
    UpdateResult addressscopes.UpdateResult
}

func NewUpdateNetworkingV2ExtensionsLayer3AddressscopesResponse(updateResult addressscopes.UpdateResult,)*UpdateNetworkingV2ExtensionsLayer3AddressscopesResponse {
    return &UpdateNetworkingV2ExtensionsLayer3AddressscopesResponse{
            UpdateResult:updateResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateNetworkingV2ExtensionsLayer3Addressscopes(req *UpdateNetworkingV2ExtensionsLayer3AddressscopesRequest)(*UpdateNetworkingV2ExtensionsLayer3AddressscopesResponse){
    return NewUpdateNetworkingV2ExtensionsLayer3AddressscopesResponse(addressscopes.Update(oc.Client,req.AddressScopeID,req.Opts, ))

}
//request struct for the DeleteNetworkingV2ExtensionsLayer3Addressscopes
type DeleteNetworkingV2ExtensionsLayer3AddressscopesRequest struct{
    Id string
}

func NewDeleteNetworkingV2ExtensionsLayer3AddressscopesRequest()*DeleteNetworkingV2ExtensionsLayer3AddressscopesRequest{
    return &DeleteNetworkingV2ExtensionsLayer3AddressscopesRequest{}
}

//response struct for the DeleteNetworkingV2ExtensionsLayer3Addressscopes
type DeleteNetworkingV2ExtensionsLayer3AddressscopesResponse struct{
    DeleteResult addressscopes.DeleteResult
}

func NewDeleteNetworkingV2ExtensionsLayer3AddressscopesResponse(deleteResult addressscopes.DeleteResult,)*DeleteNetworkingV2ExtensionsLayer3AddressscopesResponse {
    return &DeleteNetworkingV2ExtensionsLayer3AddressscopesResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteNetworkingV2ExtensionsLayer3Addressscopes(req *DeleteNetworkingV2ExtensionsLayer3AddressscopesRequest)(*DeleteNetworkingV2ExtensionsLayer3AddressscopesResponse){
    return NewDeleteNetworkingV2ExtensionsLayer3AddressscopesResponse(addressscopes.Delete(oc.Client,req.Id, ))

}