package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/networking/v2/extensions/vpnaas/services"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the CreateNetworkingV2ExtensionsVpnaasServices
type CreateNetworkingV2ExtensionsVpnaasServicesRequest struct{
    Opts services.CreateOptsBuilder
}

func NewCreateNetworkingV2ExtensionsVpnaasServicesRequest()*CreateNetworkingV2ExtensionsVpnaasServicesRequest{
    return &CreateNetworkingV2ExtensionsVpnaasServicesRequest{}
}

//response struct for the CreateNetworkingV2ExtensionsVpnaasServices
type CreateNetworkingV2ExtensionsVpnaasServicesResponse struct{
    CreateResult services.CreateResult
}

func NewCreateNetworkingV2ExtensionsVpnaasServicesResponse(createResult services.CreateResult,)*CreateNetworkingV2ExtensionsVpnaasServicesResponse {
    return &CreateNetworkingV2ExtensionsVpnaasServicesResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateNetworkingV2ExtensionsVpnaasServices(req *CreateNetworkingV2ExtensionsVpnaasServicesRequest)(*CreateNetworkingV2ExtensionsVpnaasServicesResponse){
    return NewCreateNetworkingV2ExtensionsVpnaasServicesResponse(services.Create(oc.client,req.Opts, ))

}
//request struct for the DeleteNetworkingV2ExtensionsVpnaasServices
type DeleteNetworkingV2ExtensionsVpnaasServicesRequest struct{
    Id string
}

func NewDeleteNetworkingV2ExtensionsVpnaasServicesRequest()*DeleteNetworkingV2ExtensionsVpnaasServicesRequest{
    return &DeleteNetworkingV2ExtensionsVpnaasServicesRequest{}
}

//response struct for the DeleteNetworkingV2ExtensionsVpnaasServices
type DeleteNetworkingV2ExtensionsVpnaasServicesResponse struct{
    DeleteResult services.DeleteResult
}

func NewDeleteNetworkingV2ExtensionsVpnaasServicesResponse(deleteResult services.DeleteResult,)*DeleteNetworkingV2ExtensionsVpnaasServicesResponse {
    return &DeleteNetworkingV2ExtensionsVpnaasServicesResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteNetworkingV2ExtensionsVpnaasServices(req *DeleteNetworkingV2ExtensionsVpnaasServicesRequest)(*DeleteNetworkingV2ExtensionsVpnaasServicesResponse){
    return NewDeleteNetworkingV2ExtensionsVpnaasServicesResponse(services.Delete(oc.client,req.Id, ))

}
//request struct for the UpdateNetworkingV2ExtensionsVpnaasServices
type UpdateNetworkingV2ExtensionsVpnaasServicesRequest struct{
    Id string
    Opts services.UpdateOptsBuilder
}

func NewUpdateNetworkingV2ExtensionsVpnaasServicesRequest()*UpdateNetworkingV2ExtensionsVpnaasServicesRequest{
    return &UpdateNetworkingV2ExtensionsVpnaasServicesRequest{}
}

//response struct for the UpdateNetworkingV2ExtensionsVpnaasServices
type UpdateNetworkingV2ExtensionsVpnaasServicesResponse struct{
    UpdateResult services.UpdateResult
}

func NewUpdateNetworkingV2ExtensionsVpnaasServicesResponse(updateResult services.UpdateResult,)*UpdateNetworkingV2ExtensionsVpnaasServicesResponse {
    return &UpdateNetworkingV2ExtensionsVpnaasServicesResponse{
            UpdateResult:updateResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateNetworkingV2ExtensionsVpnaasServices(req *UpdateNetworkingV2ExtensionsVpnaasServicesRequest)(*UpdateNetworkingV2ExtensionsVpnaasServicesResponse){
    return NewUpdateNetworkingV2ExtensionsVpnaasServicesResponse(services.Update(oc.client,req.Id,req.Opts, ))

}
//request struct for the ListNetworkingV2ExtensionsVpnaasServices
type ListNetworkingV2ExtensionsVpnaasServicesRequest struct{
    Opts services.ListOptsBuilder
}

func NewListNetworkingV2ExtensionsVpnaasServicesRequest()*ListNetworkingV2ExtensionsVpnaasServicesRequest{
    return &ListNetworkingV2ExtensionsVpnaasServicesRequest{}
}

//response struct for the ListNetworkingV2ExtensionsVpnaasServices
type ListNetworkingV2ExtensionsVpnaasServicesResponse struct{
    Pager pagination.Pager
}

func NewListNetworkingV2ExtensionsVpnaasServicesResponse(pager pagination.Pager,)*ListNetworkingV2ExtensionsVpnaasServicesResponse {
    return &ListNetworkingV2ExtensionsVpnaasServicesResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListNetworkingV2ExtensionsVpnaasServices(req *ListNetworkingV2ExtensionsVpnaasServicesRequest)(*ListNetworkingV2ExtensionsVpnaasServicesResponse){
    return NewListNetworkingV2ExtensionsVpnaasServicesResponse(services.List(oc.client,req.Opts, ))

}
//request struct for the GetNetworkingV2ExtensionsVpnaasServices
type GetNetworkingV2ExtensionsVpnaasServicesRequest struct{
    Id string
}

func NewGetNetworkingV2ExtensionsVpnaasServicesRequest()*GetNetworkingV2ExtensionsVpnaasServicesRequest{
    return &GetNetworkingV2ExtensionsVpnaasServicesRequest{}
}

//response struct for the GetNetworkingV2ExtensionsVpnaasServices
type GetNetworkingV2ExtensionsVpnaasServicesResponse struct{
    GetResult services.GetResult
}

func NewGetNetworkingV2ExtensionsVpnaasServicesResponse(getResult services.GetResult,)*GetNetworkingV2ExtensionsVpnaasServicesResponse {
    return &GetNetworkingV2ExtensionsVpnaasServicesResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetNetworkingV2ExtensionsVpnaasServices(req *GetNetworkingV2ExtensionsVpnaasServicesRequest)(*GetNetworkingV2ExtensionsVpnaasServicesResponse){
    return NewGetNetworkingV2ExtensionsVpnaasServicesResponse(services.Get(oc.client,req.Id, ))

}