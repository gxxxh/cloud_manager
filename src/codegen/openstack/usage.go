package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/compute/v2/extensions/usage"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the SingleTenantUsage
type SingleTenantUsageRequest struct{
    tenantID string
    opts usage.SingleTenantOptsBuilder
}

func NewSingleTenantUsageRequest()*SingleTenantUsageRequest{
    return &SingleTenantUsageRequest{}
}

//response struct for the SingleTenantUsage
type SingleTenantUsageResponse struct{
    Pager pagination.Pager
}

func NewSingleTenantUsageResponse(pager pagination.Pager,)*SingleTenantUsageResponse {
    return &SingleTenantUsageResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) SingleTenantUsage(request *SingleTenantUsageRequest)(*SingleTenantUsageResponse){
    return NewSingleTenantUsageResponse(usage.SingleTenant(oc.client,request.tenantID,request.opts, ))

}
//request struct for the AllTenantsUsage
type AllTenantsUsageRequest struct{
    opts usage.AllTenantsOptsBuilder
}

func NewAllTenantsUsageRequest()*AllTenantsUsageRequest{
    return &AllTenantsUsageRequest{}
}

//response struct for the AllTenantsUsage
type AllTenantsUsageResponse struct{
    Pager pagination.Pager
}

func NewAllTenantsUsageResponse(pager pagination.Pager,)*AllTenantsUsageResponse {
    return &AllTenantsUsageResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) AllTenantsUsage(request *AllTenantsUsageRequest)(*AllTenantsUsageResponse){
    return NewAllTenantsUsageResponse(usage.AllTenants(oc.client,request.opts, ))

}