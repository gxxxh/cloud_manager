package openstack

// Code generated by cloud manager.

import (
    "github.com/gophercloud/gophercloud/openstack/networking/v2/extensions/lbaas_v2/l7policies"
)


// call result's extract function
func ExtractCreateNetworkingV2ExtensionsLbaas_v2L7policiesResponse(response *CreateNetworkingV2ExtensionsLbaas_v2L7policiesResponse)(interface{}, error){
    return response.CreateResult.Body, response.CreateResult.Err
}



//extract response info from pager for ListNetworkingV2ExtensionsLbaas_v2L7policies
func ExtractListNetworkingV2ExtensionsLbaas_v2L7policiesResponse(response *ListNetworkingV2ExtensionsLbaas_v2L7policiesResponse)([]l7policies.L7Policy,error){
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return l7policies.ExtractL7Policies(page)
}


// call result's extract function
func ExtractGetNetworkingV2ExtensionsLbaas_v2L7policiesResponse(response *GetNetworkingV2ExtensionsLbaas_v2L7policiesResponse)(interface{}, error){
    return response.GetResult.Body, response.GetResult.Err
}



// call result's extract function
func ExtractDeleteNetworkingV2ExtensionsLbaas_v2L7policiesResponse(response *DeleteNetworkingV2ExtensionsLbaas_v2L7policiesResponse)(interface{}, error){
    return response.DeleteResult.Body, response.DeleteResult.Err
}



// call result's extract function
func ExtractUpdateNetworkingV2ExtensionsLbaas_v2L7policiesResponse(response *UpdateNetworkingV2ExtensionsLbaas_v2L7policiesResponse)(interface{}, error){
    return response.UpdateResult.Body, response.UpdateResult.Err
}



// call result's extract function
func ExtractCreateRuleNetworkingV2ExtensionsLbaas_v2L7policiesResponse(response *CreateRuleNetworkingV2ExtensionsLbaas_v2L7policiesResponse)(interface{}, error){
    return response.CreateRuleResult.Body, response.CreateRuleResult.Err
}



//extract response info from pager for ListRulesNetworkingV2ExtensionsLbaas_v2L7policies
func ExtractListRulesNetworkingV2ExtensionsLbaas_v2L7policiesResponse(response *ListRulesNetworkingV2ExtensionsLbaas_v2L7policiesResponse)([]l7policies.Rule,error){
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return l7policies.ExtractRules(page)
}


// call result's extract function
func ExtractGetRuleNetworkingV2ExtensionsLbaas_v2L7policiesResponse(response *GetRuleNetworkingV2ExtensionsLbaas_v2L7policiesResponse)(interface{}, error){
    return response.GetRuleResult.Body, response.GetRuleResult.Err
}



// call result's extract function
func ExtractDeleteRuleNetworkingV2ExtensionsLbaas_v2L7policiesResponse(response *DeleteRuleNetworkingV2ExtensionsLbaas_v2L7policiesResponse)(interface{}, error){
    return response.DeleteRuleResult.Body, response.DeleteRuleResult.Err
}



// call result's extract function
func ExtractUpdateRuleNetworkingV2ExtensionsLbaas_v2L7policiesResponse(response *UpdateRuleNetworkingV2ExtensionsLbaas_v2L7policiesResponse)(interface{}, error){
    return response.UpdateRuleResult.Body, response.UpdateRuleResult.Err
}
