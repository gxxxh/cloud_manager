package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/networking/v2/extensions/vpnaas/endpointgroups"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the CreateNetworkingV2ExtensionsVpnaasEndpointgroups
type CreateNetworkingV2ExtensionsVpnaasEndpointgroupsRequest struct{
    Opts endpointgroups.CreateOpts
}

func NewCreateNetworkingV2ExtensionsVpnaasEndpointgroupsRequest()*CreateNetworkingV2ExtensionsVpnaasEndpointgroupsRequest{
    return &CreateNetworkingV2ExtensionsVpnaasEndpointgroupsRequest{}
}

//response struct for the CreateNetworkingV2ExtensionsVpnaasEndpointgroups
type CreateNetworkingV2ExtensionsVpnaasEndpointgroupsResponse struct{
    CreateResult endpointgroups.CreateResult
}

func NewCreateNetworkingV2ExtensionsVpnaasEndpointgroupsResponse(createResult endpointgroups.CreateResult,)*CreateNetworkingV2ExtensionsVpnaasEndpointgroupsResponse {
    return &CreateNetworkingV2ExtensionsVpnaasEndpointgroupsResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateNetworkingV2ExtensionsVpnaasEndpointgroups(req *CreateNetworkingV2ExtensionsVpnaasEndpointgroupsRequest)(*CreateNetworkingV2ExtensionsVpnaasEndpointgroupsResponse){
    return NewCreateNetworkingV2ExtensionsVpnaasEndpointgroupsResponse(endpointgroups.Create(oc.Client,req.Opts, ))

}
//request struct for the GetNetworkingV2ExtensionsVpnaasEndpointgroups
type GetNetworkingV2ExtensionsVpnaasEndpointgroupsRequest struct{
    Id string
}

func NewGetNetworkingV2ExtensionsVpnaasEndpointgroupsRequest()*GetNetworkingV2ExtensionsVpnaasEndpointgroupsRequest{
    return &GetNetworkingV2ExtensionsVpnaasEndpointgroupsRequest{}
}

//response struct for the GetNetworkingV2ExtensionsVpnaasEndpointgroups
type GetNetworkingV2ExtensionsVpnaasEndpointgroupsResponse struct{
    GetResult endpointgroups.GetResult
}

func NewGetNetworkingV2ExtensionsVpnaasEndpointgroupsResponse(getResult endpointgroups.GetResult,)*GetNetworkingV2ExtensionsVpnaasEndpointgroupsResponse {
    return &GetNetworkingV2ExtensionsVpnaasEndpointgroupsResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetNetworkingV2ExtensionsVpnaasEndpointgroups(req *GetNetworkingV2ExtensionsVpnaasEndpointgroupsRequest)(*GetNetworkingV2ExtensionsVpnaasEndpointgroupsResponse){
    return NewGetNetworkingV2ExtensionsVpnaasEndpointgroupsResponse(endpointgroups.Get(oc.Client,req.Id, ))

}
//request struct for the ListNetworkingV2ExtensionsVpnaasEndpointgroups
type ListNetworkingV2ExtensionsVpnaasEndpointgroupsRequest struct{
    Opts endpointgroups.ListOpts
}

func NewListNetworkingV2ExtensionsVpnaasEndpointgroupsRequest()*ListNetworkingV2ExtensionsVpnaasEndpointgroupsRequest{
    return &ListNetworkingV2ExtensionsVpnaasEndpointgroupsRequest{}
}

//response struct for the ListNetworkingV2ExtensionsVpnaasEndpointgroups
type ListNetworkingV2ExtensionsVpnaasEndpointgroupsResponse struct{
    Pager pagination.Pager
}

func NewListNetworkingV2ExtensionsVpnaasEndpointgroupsResponse(pager pagination.Pager,)*ListNetworkingV2ExtensionsVpnaasEndpointgroupsResponse {
    return &ListNetworkingV2ExtensionsVpnaasEndpointgroupsResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListNetworkingV2ExtensionsVpnaasEndpointgroups(req *ListNetworkingV2ExtensionsVpnaasEndpointgroupsRequest)(*ListNetworkingV2ExtensionsVpnaasEndpointgroupsResponse){
    return NewListNetworkingV2ExtensionsVpnaasEndpointgroupsResponse(endpointgroups.List(oc.Client,req.Opts, ))

}
//request struct for the DeleteNetworkingV2ExtensionsVpnaasEndpointgroups
type DeleteNetworkingV2ExtensionsVpnaasEndpointgroupsRequest struct{
    Id string
}

func NewDeleteNetworkingV2ExtensionsVpnaasEndpointgroupsRequest()*DeleteNetworkingV2ExtensionsVpnaasEndpointgroupsRequest{
    return &DeleteNetworkingV2ExtensionsVpnaasEndpointgroupsRequest{}
}

//response struct for the DeleteNetworkingV2ExtensionsVpnaasEndpointgroups
type DeleteNetworkingV2ExtensionsVpnaasEndpointgroupsResponse struct{
    DeleteResult endpointgroups.DeleteResult
}

func NewDeleteNetworkingV2ExtensionsVpnaasEndpointgroupsResponse(deleteResult endpointgroups.DeleteResult,)*DeleteNetworkingV2ExtensionsVpnaasEndpointgroupsResponse {
    return &DeleteNetworkingV2ExtensionsVpnaasEndpointgroupsResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteNetworkingV2ExtensionsVpnaasEndpointgroups(req *DeleteNetworkingV2ExtensionsVpnaasEndpointgroupsRequest)(*DeleteNetworkingV2ExtensionsVpnaasEndpointgroupsResponse){
    return NewDeleteNetworkingV2ExtensionsVpnaasEndpointgroupsResponse(endpointgroups.Delete(oc.Client,req.Id, ))

}
//request struct for the UpdateNetworkingV2ExtensionsVpnaasEndpointgroups
type UpdateNetworkingV2ExtensionsVpnaasEndpointgroupsRequest struct{
    Id string
    Opts endpointgroups.UpdateOpts
}

func NewUpdateNetworkingV2ExtensionsVpnaasEndpointgroupsRequest()*UpdateNetworkingV2ExtensionsVpnaasEndpointgroupsRequest{
    return &UpdateNetworkingV2ExtensionsVpnaasEndpointgroupsRequest{}
}

//response struct for the UpdateNetworkingV2ExtensionsVpnaasEndpointgroups
type UpdateNetworkingV2ExtensionsVpnaasEndpointgroupsResponse struct{
    UpdateResult endpointgroups.UpdateResult
}

func NewUpdateNetworkingV2ExtensionsVpnaasEndpointgroupsResponse(updateResult endpointgroups.UpdateResult,)*UpdateNetworkingV2ExtensionsVpnaasEndpointgroupsResponse {
    return &UpdateNetworkingV2ExtensionsVpnaasEndpointgroupsResponse{
            UpdateResult:updateResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateNetworkingV2ExtensionsVpnaasEndpointgroups(req *UpdateNetworkingV2ExtensionsVpnaasEndpointgroupsRequest)(*UpdateNetworkingV2ExtensionsVpnaasEndpointgroupsResponse){
    return NewUpdateNetworkingV2ExtensionsVpnaasEndpointgroupsResponse(endpointgroups.Update(oc.Client,req.Id,req.Opts, ))

}