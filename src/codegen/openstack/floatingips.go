package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/compute/v2/extensions/floatingips"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the ListFloatingips
type ListFloatingipsRequest struct{
}

func NewListFloatingipsRequest()*ListFloatingipsRequest{
    return &ListFloatingipsRequest{}
}

//response struct for the ListFloatingips
type ListFloatingipsResponse struct{
    Pager pagination.Pager
}

func NewListFloatingipsResponse(pager pagination.Pager,)*ListFloatingipsResponse {
    return &ListFloatingipsResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListFloatingips(request *ListFloatingipsRequest)(*ListFloatingipsResponse){
    return NewListFloatingipsResponse(floatingips.List(oc.client, ))

}
//request struct for the CreateFloatingips
type CreateFloatingipsRequest struct{
    opts floatingips.CreateOptsBuilder
}

func NewCreateFloatingipsRequest()*CreateFloatingipsRequest{
    return &CreateFloatingipsRequest{}
}

//response struct for the CreateFloatingips
type CreateFloatingipsResponse struct{
    CreateResult floatingips.CreateResult
}

func NewCreateFloatingipsResponse(createResult floatingips.CreateResult,)*CreateFloatingipsResponse {
    return &CreateFloatingipsResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateFloatingips(request *CreateFloatingipsRequest)(*CreateFloatingipsResponse){
    return NewCreateFloatingipsResponse(floatingips.Create(oc.client,request.opts, ))

}
//request struct for the GetFloatingips
type GetFloatingipsRequest struct{
    id string
}

func NewGetFloatingipsRequest()*GetFloatingipsRequest{
    return &GetFloatingipsRequest{}
}

//response struct for the GetFloatingips
type GetFloatingipsResponse struct{
    GetResult floatingips.GetResult
}

func NewGetFloatingipsResponse(getResult floatingips.GetResult,)*GetFloatingipsResponse {
    return &GetFloatingipsResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetFloatingips(request *GetFloatingipsRequest)(*GetFloatingipsResponse){
    return NewGetFloatingipsResponse(floatingips.Get(oc.client,request.id, ))

}
//request struct for the DeleteFloatingips
type DeleteFloatingipsRequest struct{
    id string
}

func NewDeleteFloatingipsRequest()*DeleteFloatingipsRequest{
    return &DeleteFloatingipsRequest{}
}

//response struct for the DeleteFloatingips
type DeleteFloatingipsResponse struct{
    DeleteResult floatingips.DeleteResult
}

func NewDeleteFloatingipsResponse(deleteResult floatingips.DeleteResult,)*DeleteFloatingipsResponse {
    return &DeleteFloatingipsResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteFloatingips(request *DeleteFloatingipsRequest)(*DeleteFloatingipsResponse){
    return NewDeleteFloatingipsResponse(floatingips.Delete(oc.client,request.id, ))

}
//request struct for the AssociateInstanceFloatingips
type AssociateInstanceFloatingipsRequest struct{
    serverID string
    opts floatingips.AssociateOptsBuilder
}

func NewAssociateInstanceFloatingipsRequest()*AssociateInstanceFloatingipsRequest{
    return &AssociateInstanceFloatingipsRequest{}
}

//response struct for the AssociateInstanceFloatingips
type AssociateInstanceFloatingipsResponse struct{
    AssociateResult floatingips.AssociateResult
}

func NewAssociateInstanceFloatingipsResponse(associateResult floatingips.AssociateResult,)*AssociateInstanceFloatingipsResponse {
    return &AssociateInstanceFloatingipsResponse{
            AssociateResult:associateResult,
    }
}

// action function
func (oc *OpenstackClient) AssociateInstanceFloatingips(request *AssociateInstanceFloatingipsRequest)(*AssociateInstanceFloatingipsResponse){
    return NewAssociateInstanceFloatingipsResponse(floatingips.AssociateInstance(oc.client,request.serverID,request.opts, ))

}
//request struct for the DisassociateInstanceFloatingips
type DisassociateInstanceFloatingipsRequest struct{
    serverID string
    opts floatingips.DisassociateOptsBuilder
}

func NewDisassociateInstanceFloatingipsRequest()*DisassociateInstanceFloatingipsRequest{
    return &DisassociateInstanceFloatingipsRequest{}
}

//response struct for the DisassociateInstanceFloatingips
type DisassociateInstanceFloatingipsResponse struct{
    DisassociateResult floatingips.DisassociateResult
}

func NewDisassociateInstanceFloatingipsResponse(disassociateResult floatingips.DisassociateResult,)*DisassociateInstanceFloatingipsResponse {
    return &DisassociateInstanceFloatingipsResponse{
            DisassociateResult:disassociateResult,
    }
}

// action function
func (oc *OpenstackClient) DisassociateInstanceFloatingips(request *DisassociateInstanceFloatingipsRequest)(*DisassociateInstanceFloatingipsResponse){
    return NewDisassociateInstanceFloatingipsResponse(floatingips.DisassociateInstance(oc.client,request.serverID,request.opts, ))

}