package openstack

// Code generated by cloud manager.

import (
	"github.com/gophercloud/gophercloud/openstack/keymanager/v1/containers"
)

// extract response info from pager for ListKeymanagerV1Containers
func ExtractListKeymanagerV1ContainersResponse(response *ListKeymanagerV1ContainersResponse) ([]containers.Container, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return containers.ExtractContainers(page)
}

// call result's extract function
func ExtractGetKeymanagerV1ContainersResponse(response *GetKeymanagerV1ContainersResponse) (interface{}, error) {
	return response.GetResult.Body, response.GetResult.Err
}

// call result's extract function
func ExtractCreateKeymanagerV1ContainersResponse(response *CreateKeymanagerV1ContainersResponse) (interface{}, error) {
	return response.CreateResult.Body, response.CreateResult.Err
}

// call result's extract function
func ExtractDeleteKeymanagerV1ContainersResponse(response *DeleteKeymanagerV1ContainersResponse) (interface{}, error) {
	return response.DeleteResult.Body, response.DeleteResult.Err
}

// extract response info from pager for ListConsumersKeymanagerV1Containers
func ExtractListConsumersKeymanagerV1ContainersResponse(response *ListConsumersKeymanagerV1ContainersResponse) ([]containers.Consumer, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return containers.ExtractConsumers(page)
}

// call result's extract function
func ExtractCreateConsumerKeymanagerV1ContainersResponse(response *CreateConsumerKeymanagerV1ContainersResponse) (interface{}, error) {
	return response.CreateConsumerResult.Body, response.CreateConsumerResult.Err
}

// call result's extract function
func ExtractDeleteConsumerKeymanagerV1ContainersResponse(response *DeleteConsumerKeymanagerV1ContainersResponse) (interface{}, error) {
	return response.DeleteConsumerResult.Body, response.DeleteConsumerResult.Err
}

// call result's extract function
func ExtractCreateSecretRefKeymanagerV1ContainersResponse(response *CreateSecretRefKeymanagerV1ContainersResponse) (interface{}, error) {
	return response.CreateSecretRefResult.Body, response.CreateSecretRefResult.Err
}

// call result's extract function
func ExtractDeleteSecretRefKeymanagerV1ContainersResponse(response *DeleteSecretRefKeymanagerV1ContainersResponse) (interface{}, error) {
	return response.DeleteSecretRefResult.Body, response.DeleteSecretRefResult.Err
}
