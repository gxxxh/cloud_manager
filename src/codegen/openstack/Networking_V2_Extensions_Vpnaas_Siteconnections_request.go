package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/networking/v2/extensions/vpnaas/siteconnections"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the CreateNetworkingV2ExtensionsVpnaasSiteconnections
type CreateNetworkingV2ExtensionsVpnaasSiteconnectionsRequest struct{
    Opts siteconnections.CreateOpts
}

func NewCreateNetworkingV2ExtensionsVpnaasSiteconnectionsRequest()*CreateNetworkingV2ExtensionsVpnaasSiteconnectionsRequest{
    return &CreateNetworkingV2ExtensionsVpnaasSiteconnectionsRequest{}
}

//response struct for the CreateNetworkingV2ExtensionsVpnaasSiteconnections
type CreateNetworkingV2ExtensionsVpnaasSiteconnectionsResponse struct{
    CreateResult siteconnections.CreateResult
}

func NewCreateNetworkingV2ExtensionsVpnaasSiteconnectionsResponse(createResult siteconnections.CreateResult,)*CreateNetworkingV2ExtensionsVpnaasSiteconnectionsResponse {
    return &CreateNetworkingV2ExtensionsVpnaasSiteconnectionsResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateNetworkingV2ExtensionsVpnaasSiteconnections(req *CreateNetworkingV2ExtensionsVpnaasSiteconnectionsRequest)(*CreateNetworkingV2ExtensionsVpnaasSiteconnectionsResponse){
    return NewCreateNetworkingV2ExtensionsVpnaasSiteconnectionsResponse(siteconnections.Create(oc.Client,req.Opts, ))

}
//request struct for the DeleteNetworkingV2ExtensionsVpnaasSiteconnections
type DeleteNetworkingV2ExtensionsVpnaasSiteconnectionsRequest struct{
    Id string
}

func NewDeleteNetworkingV2ExtensionsVpnaasSiteconnectionsRequest()*DeleteNetworkingV2ExtensionsVpnaasSiteconnectionsRequest{
    return &DeleteNetworkingV2ExtensionsVpnaasSiteconnectionsRequest{}
}

//response struct for the DeleteNetworkingV2ExtensionsVpnaasSiteconnections
type DeleteNetworkingV2ExtensionsVpnaasSiteconnectionsResponse struct{
    DeleteResult siteconnections.DeleteResult
}

func NewDeleteNetworkingV2ExtensionsVpnaasSiteconnectionsResponse(deleteResult siteconnections.DeleteResult,)*DeleteNetworkingV2ExtensionsVpnaasSiteconnectionsResponse {
    return &DeleteNetworkingV2ExtensionsVpnaasSiteconnectionsResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteNetworkingV2ExtensionsVpnaasSiteconnections(req *DeleteNetworkingV2ExtensionsVpnaasSiteconnectionsRequest)(*DeleteNetworkingV2ExtensionsVpnaasSiteconnectionsResponse){
    return NewDeleteNetworkingV2ExtensionsVpnaasSiteconnectionsResponse(siteconnections.Delete(oc.Client,req.Id, ))

}
//request struct for the GetNetworkingV2ExtensionsVpnaasSiteconnections
type GetNetworkingV2ExtensionsVpnaasSiteconnectionsRequest struct{
    Id string
}

func NewGetNetworkingV2ExtensionsVpnaasSiteconnectionsRequest()*GetNetworkingV2ExtensionsVpnaasSiteconnectionsRequest{
    return &GetNetworkingV2ExtensionsVpnaasSiteconnectionsRequest{}
}

//response struct for the GetNetworkingV2ExtensionsVpnaasSiteconnections
type GetNetworkingV2ExtensionsVpnaasSiteconnectionsResponse struct{
    GetResult siteconnections.GetResult
}

func NewGetNetworkingV2ExtensionsVpnaasSiteconnectionsResponse(getResult siteconnections.GetResult,)*GetNetworkingV2ExtensionsVpnaasSiteconnectionsResponse {
    return &GetNetworkingV2ExtensionsVpnaasSiteconnectionsResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetNetworkingV2ExtensionsVpnaasSiteconnections(req *GetNetworkingV2ExtensionsVpnaasSiteconnectionsRequest)(*GetNetworkingV2ExtensionsVpnaasSiteconnectionsResponse){
    return NewGetNetworkingV2ExtensionsVpnaasSiteconnectionsResponse(siteconnections.Get(oc.Client,req.Id, ))

}
//request struct for the ListNetworkingV2ExtensionsVpnaasSiteconnections
type ListNetworkingV2ExtensionsVpnaasSiteconnectionsRequest struct{
    Opts siteconnections.ListOpts
}

func NewListNetworkingV2ExtensionsVpnaasSiteconnectionsRequest()*ListNetworkingV2ExtensionsVpnaasSiteconnectionsRequest{
    return &ListNetworkingV2ExtensionsVpnaasSiteconnectionsRequest{}
}

//response struct for the ListNetworkingV2ExtensionsVpnaasSiteconnections
type ListNetworkingV2ExtensionsVpnaasSiteconnectionsResponse struct{
    Pager pagination.Pager
}

func NewListNetworkingV2ExtensionsVpnaasSiteconnectionsResponse(pager pagination.Pager,)*ListNetworkingV2ExtensionsVpnaasSiteconnectionsResponse {
    return &ListNetworkingV2ExtensionsVpnaasSiteconnectionsResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListNetworkingV2ExtensionsVpnaasSiteconnections(req *ListNetworkingV2ExtensionsVpnaasSiteconnectionsRequest)(*ListNetworkingV2ExtensionsVpnaasSiteconnectionsResponse){
    return NewListNetworkingV2ExtensionsVpnaasSiteconnectionsResponse(siteconnections.List(oc.Client,req.Opts, ))

}
//request struct for the UpdateNetworkingV2ExtensionsVpnaasSiteconnections
type UpdateNetworkingV2ExtensionsVpnaasSiteconnectionsRequest struct{
    Id string
    Opts siteconnections.UpdateOpts
}

func NewUpdateNetworkingV2ExtensionsVpnaasSiteconnectionsRequest()*UpdateNetworkingV2ExtensionsVpnaasSiteconnectionsRequest{
    return &UpdateNetworkingV2ExtensionsVpnaasSiteconnectionsRequest{}
}

//response struct for the UpdateNetworkingV2ExtensionsVpnaasSiteconnections
type UpdateNetworkingV2ExtensionsVpnaasSiteconnectionsResponse struct{
    UpdateResult siteconnections.UpdateResult
}

func NewUpdateNetworkingV2ExtensionsVpnaasSiteconnectionsResponse(updateResult siteconnections.UpdateResult,)*UpdateNetworkingV2ExtensionsVpnaasSiteconnectionsResponse {
    return &UpdateNetworkingV2ExtensionsVpnaasSiteconnectionsResponse{
            UpdateResult:updateResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateNetworkingV2ExtensionsVpnaasSiteconnections(req *UpdateNetworkingV2ExtensionsVpnaasSiteconnectionsRequest)(*UpdateNetworkingV2ExtensionsVpnaasSiteconnectionsResponse){
    return NewUpdateNetworkingV2ExtensionsVpnaasSiteconnectionsResponse(siteconnections.Update(oc.Client,req.Id,req.Opts, ))

}