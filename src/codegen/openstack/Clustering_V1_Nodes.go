package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/clustering/v1/nodes"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the CreateClusteringV1Nodes
type CreateClusteringV1NodesRequest struct{
    Opts nodes.CreateOptsBuilder
}

func NewCreateClusteringV1NodesRequest()*CreateClusteringV1NodesRequest{
    return &CreateClusteringV1NodesRequest{}
}

//response struct for the CreateClusteringV1Nodes
type CreateClusteringV1NodesResponse struct{
    CreateResult nodes.CreateResult
}

func NewCreateClusteringV1NodesResponse(createResult nodes.CreateResult,)*CreateClusteringV1NodesResponse {
    return &CreateClusteringV1NodesResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateClusteringV1Nodes(request *CreateClusteringV1NodesRequest)(*CreateClusteringV1NodesResponse){
    return NewCreateClusteringV1NodesResponse(nodes.Create(oc.client,request.Opts, ))

}
//request struct for the UpdateClusteringV1Nodes
type UpdateClusteringV1NodesRequest struct{
    Id string
    Opts nodes.UpdateOptsBuilder
}

func NewUpdateClusteringV1NodesRequest()*UpdateClusteringV1NodesRequest{
    return &UpdateClusteringV1NodesRequest{}
}

//response struct for the UpdateClusteringV1Nodes
type UpdateClusteringV1NodesResponse struct{
    UpdateResult nodes.UpdateResult
}

func NewUpdateClusteringV1NodesResponse(updateResult nodes.UpdateResult,)*UpdateClusteringV1NodesResponse {
    return &UpdateClusteringV1NodesResponse{
            UpdateResult:updateResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateClusteringV1Nodes(request *UpdateClusteringV1NodesRequest)(*UpdateClusteringV1NodesResponse){
    return NewUpdateClusteringV1NodesResponse(nodes.Update(oc.client,request.Id,request.Opts, ))

}
//request struct for the ListClusteringV1Nodes
type ListClusteringV1NodesRequest struct{
    Opts nodes.ListOptsBuilder
}

func NewListClusteringV1NodesRequest()*ListClusteringV1NodesRequest{
    return &ListClusteringV1NodesRequest{}
}

//response struct for the ListClusteringV1Nodes
type ListClusteringV1NodesResponse struct{
    Pager pagination.Pager
}

func NewListClusteringV1NodesResponse(pager pagination.Pager,)*ListClusteringV1NodesResponse {
    return &ListClusteringV1NodesResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListClusteringV1Nodes(request *ListClusteringV1NodesRequest)(*ListClusteringV1NodesResponse){
    return NewListClusteringV1NodesResponse(nodes.List(oc.client,request.Opts, ))

}
//request struct for the DeleteClusteringV1Nodes
type DeleteClusteringV1NodesRequest struct{
    Id string
}

func NewDeleteClusteringV1NodesRequest()*DeleteClusteringV1NodesRequest{
    return &DeleteClusteringV1NodesRequest{}
}

//response struct for the DeleteClusteringV1Nodes
type DeleteClusteringV1NodesResponse struct{
    DeleteResult nodes.DeleteResult
}

func NewDeleteClusteringV1NodesResponse(deleteResult nodes.DeleteResult,)*DeleteClusteringV1NodesResponse {
    return &DeleteClusteringV1NodesResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteClusteringV1Nodes(request *DeleteClusteringV1NodesRequest)(*DeleteClusteringV1NodesResponse){
    return NewDeleteClusteringV1NodesResponse(nodes.Delete(oc.client,request.Id, ))

}
//request struct for the GetClusteringV1Nodes
type GetClusteringV1NodesRequest struct{
    Id string
}

func NewGetClusteringV1NodesRequest()*GetClusteringV1NodesRequest{
    return &GetClusteringV1NodesRequest{}
}

//response struct for the GetClusteringV1Nodes
type GetClusteringV1NodesResponse struct{
    GetResult nodes.GetResult
}

func NewGetClusteringV1NodesResponse(getResult nodes.GetResult,)*GetClusteringV1NodesResponse {
    return &GetClusteringV1NodesResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetClusteringV1Nodes(request *GetClusteringV1NodesRequest)(*GetClusteringV1NodesResponse){
    return NewGetClusteringV1NodesResponse(nodes.Get(oc.client,request.Id, ))

}
//request struct for the OpsClusteringV1Nodes
type OpsClusteringV1NodesRequest struct{
    Id string
    Opts nodes.OperationOptsBuilder
}

func NewOpsClusteringV1NodesRequest()*OpsClusteringV1NodesRequest{
    return &OpsClusteringV1NodesRequest{}
}

//response struct for the OpsClusteringV1Nodes
type OpsClusteringV1NodesResponse struct{
    ActionResult nodes.ActionResult
}

func NewOpsClusteringV1NodesResponse(actionResult nodes.ActionResult,)*OpsClusteringV1NodesResponse {
    return &OpsClusteringV1NodesResponse{
            ActionResult:actionResult,
    }
}

// action function
func (oc *OpenstackClient) OpsClusteringV1Nodes(request *OpsClusteringV1NodesRequest)(*OpsClusteringV1NodesResponse){
    return NewOpsClusteringV1NodesResponse(nodes.Ops(oc.client,request.Id,request.Opts, ))

}
//request struct for the RecoverClusteringV1Nodes
type RecoverClusteringV1NodesRequest struct{
    Id string
    Opts nodes.RecoverOpts
}

func NewRecoverClusteringV1NodesRequest()*RecoverClusteringV1NodesRequest{
    return &RecoverClusteringV1NodesRequest{}
}

//response struct for the RecoverClusteringV1Nodes
type RecoverClusteringV1NodesResponse struct{
    ActionResult nodes.ActionResult
}

func NewRecoverClusteringV1NodesResponse(actionResult nodes.ActionResult,)*RecoverClusteringV1NodesResponse {
    return &RecoverClusteringV1NodesResponse{
            ActionResult:actionResult,
    }
}

// action function
func (oc *OpenstackClient) RecoverClusteringV1Nodes(request *RecoverClusteringV1NodesRequest)(*RecoverClusteringV1NodesResponse){
    return NewRecoverClusteringV1NodesResponse(nodes.Recover(oc.client,request.Id,request.Opts, ))

}
//request struct for the CheckClusteringV1Nodes
type CheckClusteringV1NodesRequest struct{
    Id string
}

func NewCheckClusteringV1NodesRequest()*CheckClusteringV1NodesRequest{
    return &CheckClusteringV1NodesRequest{}
}

//response struct for the CheckClusteringV1Nodes
type CheckClusteringV1NodesResponse struct{
    ActionResult nodes.ActionResult
}

func NewCheckClusteringV1NodesResponse(actionResult nodes.ActionResult,)*CheckClusteringV1NodesResponse {
    return &CheckClusteringV1NodesResponse{
            ActionResult:actionResult,
    }
}

// action function
func (oc *OpenstackClient) CheckClusteringV1Nodes(request *CheckClusteringV1NodesRequest)(*CheckClusteringV1NodesResponse){
    return NewCheckClusteringV1NodesResponse(nodes.Check(oc.client,request.Id, ))

}