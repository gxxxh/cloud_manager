package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/compute/v2/extensions/keypairs"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the ListKeypairs
type ListKeypairsRequest struct{
    opts keypairs.ListOptsBuilder
}

func NewListKeypairsRequest()*ListKeypairsRequest{
    return &ListKeypairsRequest{}
}

//response struct for the ListKeypairs
type ListKeypairsResponse struct{
    Pager pagination.Pager
}

func NewListKeypairsResponse(pager pagination.Pager,)*ListKeypairsResponse {
    return &ListKeypairsResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListKeypairs(request *ListKeypairsRequest)(*ListKeypairsResponse){
    return NewListKeypairsResponse(keypairs.List(oc.client,request.opts, ))

}
//request struct for the CreateKeypairs
type CreateKeypairsRequest struct{
    opts keypairs.CreateOptsBuilder
}

func NewCreateKeypairsRequest()*CreateKeypairsRequest{
    return &CreateKeypairsRequest{}
}

//response struct for the CreateKeypairs
type CreateKeypairsResponse struct{
    CreateResult keypairs.CreateResult
}

func NewCreateKeypairsResponse(createResult keypairs.CreateResult,)*CreateKeypairsResponse {
    return &CreateKeypairsResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateKeypairs(request *CreateKeypairsRequest)(*CreateKeypairsResponse){
    return NewCreateKeypairsResponse(keypairs.Create(oc.client,request.opts, ))

}
//request struct for the GetKeypairs
type GetKeypairsRequest struct{
    name string
    opts keypairs.GetOptsBuilder
}

func NewGetKeypairsRequest()*GetKeypairsRequest{
    return &GetKeypairsRequest{}
}

//response struct for the GetKeypairs
type GetKeypairsResponse struct{
    GetResult keypairs.GetResult
}

func NewGetKeypairsResponse(getResult keypairs.GetResult,)*GetKeypairsResponse {
    return &GetKeypairsResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetKeypairs(request *GetKeypairsRequest)(*GetKeypairsResponse){
    return NewGetKeypairsResponse(keypairs.Get(oc.client,request.name,request.opts, ))

}
//request struct for the DeleteKeypairs
type DeleteKeypairsRequest struct{
    name string
    opts keypairs.DeleteOptsBuilder
}

func NewDeleteKeypairsRequest()*DeleteKeypairsRequest{
    return &DeleteKeypairsRequest{}
}

//response struct for the DeleteKeypairs
type DeleteKeypairsResponse struct{
    DeleteResult keypairs.DeleteResult
}

func NewDeleteKeypairsResponse(deleteResult keypairs.DeleteResult,)*DeleteKeypairsResponse {
    return &DeleteKeypairsResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteKeypairs(request *DeleteKeypairsRequest)(*DeleteKeypairsResponse){
    return NewDeleteKeypairsResponse(keypairs.Delete(oc.client,request.name,request.opts, ))

}