package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/imageservice/v2/members"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the CreateImageserviceV2Members
type CreateImageserviceV2MembersRequest struct{
    Id string
    Member string
}

func NewCreateImageserviceV2MembersRequest()*CreateImageserviceV2MembersRequest{
    return &CreateImageserviceV2MembersRequest{}
}

//response struct for the CreateImageserviceV2Members
type CreateImageserviceV2MembersResponse struct{
    CreateResult members.CreateResult
}

func NewCreateImageserviceV2MembersResponse(createResult members.CreateResult,)*CreateImageserviceV2MembersResponse {
    return &CreateImageserviceV2MembersResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateImageserviceV2Members(request *CreateImageserviceV2MembersRequest)(*CreateImageserviceV2MembersResponse){
    return NewCreateImageserviceV2MembersResponse(members.Create(oc.client,request.Id,request.Member, ))

}
//request struct for the ListImageserviceV2Members
type ListImageserviceV2MembersRequest struct{
    Id string
}

func NewListImageserviceV2MembersRequest()*ListImageserviceV2MembersRequest{
    return &ListImageserviceV2MembersRequest{}
}

//response struct for the ListImageserviceV2Members
type ListImageserviceV2MembersResponse struct{
    Pager pagination.Pager
}

func NewListImageserviceV2MembersResponse(pager pagination.Pager,)*ListImageserviceV2MembersResponse {
    return &ListImageserviceV2MembersResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListImageserviceV2Members(request *ListImageserviceV2MembersRequest)(*ListImageserviceV2MembersResponse){
    return NewListImageserviceV2MembersResponse(members.List(oc.client,request.Id, ))

}
//request struct for the GetImageserviceV2Members
type GetImageserviceV2MembersRequest struct{
    ImageID string
    MemberID string
}

func NewGetImageserviceV2MembersRequest()*GetImageserviceV2MembersRequest{
    return &GetImageserviceV2MembersRequest{}
}

//response struct for the GetImageserviceV2Members
type GetImageserviceV2MembersResponse struct{
    DetailsResult members.DetailsResult
}

func NewGetImageserviceV2MembersResponse(detailsResult members.DetailsResult,)*GetImageserviceV2MembersResponse {
    return &GetImageserviceV2MembersResponse{
            DetailsResult:detailsResult,
    }
}

// action function
func (oc *OpenstackClient) GetImageserviceV2Members(request *GetImageserviceV2MembersRequest)(*GetImageserviceV2MembersResponse){
    return NewGetImageserviceV2MembersResponse(members.Get(oc.client,request.ImageID,request.MemberID, ))

}
//request struct for the DeleteImageserviceV2Members
type DeleteImageserviceV2MembersRequest struct{
    ImageID string
    MemberID string
}

func NewDeleteImageserviceV2MembersRequest()*DeleteImageserviceV2MembersRequest{
    return &DeleteImageserviceV2MembersRequest{}
}

//response struct for the DeleteImageserviceV2Members
type DeleteImageserviceV2MembersResponse struct{
    DeleteResult members.DeleteResult
}

func NewDeleteImageserviceV2MembersResponse(deleteResult members.DeleteResult,)*DeleteImageserviceV2MembersResponse {
    return &DeleteImageserviceV2MembersResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteImageserviceV2Members(request *DeleteImageserviceV2MembersRequest)(*DeleteImageserviceV2MembersResponse){
    return NewDeleteImageserviceV2MembersResponse(members.Delete(oc.client,request.ImageID,request.MemberID, ))

}
//request struct for the UpdateImageserviceV2Members
type UpdateImageserviceV2MembersRequest struct{
    ImageID string
    MemberID string
    Opts members.UpdateOptsBuilder
}

func NewUpdateImageserviceV2MembersRequest()*UpdateImageserviceV2MembersRequest{
    return &UpdateImageserviceV2MembersRequest{}
}

//response struct for the UpdateImageserviceV2Members
type UpdateImageserviceV2MembersResponse struct{
    UpdateResult members.UpdateResult
}

func NewUpdateImageserviceV2MembersResponse(updateResult members.UpdateResult,)*UpdateImageserviceV2MembersResponse {
    return &UpdateImageserviceV2MembersResponse{
            UpdateResult:updateResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateImageserviceV2Members(request *UpdateImageserviceV2MembersRequest)(*UpdateImageserviceV2MembersResponse){
    return NewUpdateImageserviceV2MembersResponse(members.Update(oc.client,request.ImageID,request.MemberID,request.Opts, ))

}