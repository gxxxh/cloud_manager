package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/compute/v2/images"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the ListDetailImages
type ListDetailImagesRequest struct{
    opts images.ListOptsBuilder
}

func NewListDetailImagesRequest()*ListDetailImagesRequest{
    return &ListDetailImagesRequest{}
}

//response struct for the ListDetailImages
type ListDetailImagesResponse struct{
    Pager pagination.Pager
}

func NewListDetailImagesResponse(pager pagination.Pager,)*ListDetailImagesResponse {
    return &ListDetailImagesResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListDetailImages(request *ListDetailImagesRequest)(*ListDetailImagesResponse){
    return NewListDetailImagesResponse(images.ListDetail(oc.client,request.opts, ))

}
//request struct for the GetImages
type GetImagesRequest struct{
    id string
}

func NewGetImagesRequest()*GetImagesRequest{
    return &GetImagesRequest{}
}

//response struct for the GetImages
type GetImagesResponse struct{
    GetResult images.GetResult
}

func NewGetImagesResponse(getResult images.GetResult,)*GetImagesResponse {
    return &GetImagesResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetImages(request *GetImagesRequest)(*GetImagesResponse){
    return NewGetImagesResponse(images.Get(oc.client,request.id, ))

}
//request struct for the DeleteImages
type DeleteImagesRequest struct{
    id string
}

func NewDeleteImagesRequest()*DeleteImagesRequest{
    return &DeleteImagesRequest{}
}

//response struct for the DeleteImages
type DeleteImagesResponse struct{
    DeleteResult images.DeleteResult
}

func NewDeleteImagesResponse(deleteResult images.DeleteResult,)*DeleteImagesResponse {
    return &DeleteImagesResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteImages(request *DeleteImagesRequest)(*DeleteImagesResponse){
    return NewDeleteImagesResponse(images.Delete(oc.client,request.id, ))

}