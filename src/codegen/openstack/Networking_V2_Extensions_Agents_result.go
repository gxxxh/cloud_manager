package openstack

// Code generated by cloud manager.

import (
	"github.com/gophercloud/gophercloud/openstack/networking/v2/extensions/agents"
	"github.com/gophercloud/gophercloud/openstack/networking/v2/extensions/bgp/speakers"
)

// extract response info from pager for ListNetworkingV2ExtensionsAgents
func ExtractListNetworkingV2ExtensionsAgentsResponse(response *ListNetworkingV2ExtensionsAgentsResponse) ([]agents.Agent, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return agents.ExtractAgents(page)
}

// call result's extract function
func ExtractGetNetworkingV2ExtensionsAgentsResponse(response *GetNetworkingV2ExtensionsAgentsResponse) (interface{}, error) {
	return response.GetResult.Body, response.GetResult.Err
}

// call result's extract function
func ExtractUpdateNetworkingV2ExtensionsAgentsResponse(response *UpdateNetworkingV2ExtensionsAgentsResponse) (interface{}, error) {
	return response.UpdateResult.Body, response.UpdateResult.Err
}

// call result's extract function
func ExtractDeleteNetworkingV2ExtensionsAgentsResponse(response *DeleteNetworkingV2ExtensionsAgentsResponse) (interface{}, error) {
	return response.DeleteResult.Body, response.DeleteResult.Err
}

// call result's extract function
func ExtractListDHCPNetworksNetworkingV2ExtensionsAgentsResponse(response *ListDHCPNetworksNetworkingV2ExtensionsAgentsResponse) (interface{}, error) {
	return response.ListDHCPNetworksResult.Body, response.ListDHCPNetworksResult.Err
}

// call result's extract function
func ExtractScheduleDHCPNetworkNetworkingV2ExtensionsAgentsResponse(response *ScheduleDHCPNetworkNetworkingV2ExtensionsAgentsResponse) (interface{}, error) {
	return response.ScheduleDHCPNetworkResult.Body, response.ScheduleDHCPNetworkResult.Err
}

// call result's extract function
func ExtractRemoveDHCPNetworkNetworkingV2ExtensionsAgentsResponse(response *RemoveDHCPNetworkNetworkingV2ExtensionsAgentsResponse) (interface{}, error) {
	return response.RemoveDHCPNetworkResult.Body, response.RemoveDHCPNetworkResult.Err
}

// extract response info from pager for ListBGPSpeakersNetworkingV2ExtensionsAgents
func ExtractListBGPSpeakersNetworkingV2ExtensionsAgentsResponse(response *ListBGPSpeakersNetworkingV2ExtensionsAgentsResponse) ([]speakers.BGPSpeaker, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return agents.ExtractBGPSpeakers(page)
}
