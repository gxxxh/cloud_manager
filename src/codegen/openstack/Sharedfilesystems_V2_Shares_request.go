package openstack

// Code generated by cloud manager.

import (
	"github.com/gophercloud/gophercloud/openstack/sharedfilesystems/v2/shares"
	"github.com/gophercloud/gophercloud/pagination"
)

// request struct for the CreateSharedfilesystemsV2Shares
type CreateSharedfilesystemsV2SharesRequest struct {
	Opts shares.CreateOpts
}

func NewCreateSharedfilesystemsV2SharesRequest() *CreateSharedfilesystemsV2SharesRequest {
	return &CreateSharedfilesystemsV2SharesRequest{}
}

// response struct for the CreateSharedfilesystemsV2Shares
type CreateSharedfilesystemsV2SharesResponse struct {
	CreateResult shares.CreateResult
}

func NewCreateSharedfilesystemsV2SharesResponse(createResult shares.CreateResult) *CreateSharedfilesystemsV2SharesResponse {
	return &CreateSharedfilesystemsV2SharesResponse{
		CreateResult: createResult,
	}
}

// action function
func (oc *OpenstackClient) CreateSharedfilesystemsV2Shares(req *CreateSharedfilesystemsV2SharesRequest) *CreateSharedfilesystemsV2SharesResponse {
	return NewCreateSharedfilesystemsV2SharesResponse(shares.Create(oc.Client, req.Opts))

}

// request struct for the ListDetailSharedfilesystemsV2Shares
type ListDetailSharedfilesystemsV2SharesRequest struct {
	Opts shares.ListOpts
}

func NewListDetailSharedfilesystemsV2SharesRequest() *ListDetailSharedfilesystemsV2SharesRequest {
	return &ListDetailSharedfilesystemsV2SharesRequest{}
}

// response struct for the ListDetailSharedfilesystemsV2Shares
type ListDetailSharedfilesystemsV2SharesResponse struct {
	Pager pagination.Pager
}

func NewListDetailSharedfilesystemsV2SharesResponse(pager pagination.Pager) *ListDetailSharedfilesystemsV2SharesResponse {
	return &ListDetailSharedfilesystemsV2SharesResponse{
		Pager: pager,
	}
}

// action function
func (oc *OpenstackClient) ListDetailSharedfilesystemsV2Shares(req *ListDetailSharedfilesystemsV2SharesRequest) *ListDetailSharedfilesystemsV2SharesResponse {
	return NewListDetailSharedfilesystemsV2SharesResponse(shares.ListDetail(oc.Client, req.Opts))

}

// request struct for the DeleteSharedfilesystemsV2Shares
type DeleteSharedfilesystemsV2SharesRequest struct {
	Id string
}

func NewDeleteSharedfilesystemsV2SharesRequest() *DeleteSharedfilesystemsV2SharesRequest {
	return &DeleteSharedfilesystemsV2SharesRequest{}
}

// response struct for the DeleteSharedfilesystemsV2Shares
type DeleteSharedfilesystemsV2SharesResponse struct {
	DeleteResult shares.DeleteResult
}

func NewDeleteSharedfilesystemsV2SharesResponse(deleteResult shares.DeleteResult) *DeleteSharedfilesystemsV2SharesResponse {
	return &DeleteSharedfilesystemsV2SharesResponse{
		DeleteResult: deleteResult,
	}
}

// action function
func (oc *OpenstackClient) DeleteSharedfilesystemsV2Shares(req *DeleteSharedfilesystemsV2SharesRequest) *DeleteSharedfilesystemsV2SharesResponse {
	return NewDeleteSharedfilesystemsV2SharesResponse(shares.Delete(oc.Client, req.Id))

}

// request struct for the GetSharedfilesystemsV2Shares
type GetSharedfilesystemsV2SharesRequest struct {
	Id string
}

func NewGetSharedfilesystemsV2SharesRequest() *GetSharedfilesystemsV2SharesRequest {
	return &GetSharedfilesystemsV2SharesRequest{}
}

// response struct for the GetSharedfilesystemsV2Shares
type GetSharedfilesystemsV2SharesResponse struct {
	GetResult shares.GetResult
}

func NewGetSharedfilesystemsV2SharesResponse(getResult shares.GetResult) *GetSharedfilesystemsV2SharesResponse {
	return &GetSharedfilesystemsV2SharesResponse{
		GetResult: getResult,
	}
}

// action function
func (oc *OpenstackClient) GetSharedfilesystemsV2Shares(req *GetSharedfilesystemsV2SharesRequest) *GetSharedfilesystemsV2SharesResponse {
	return NewGetSharedfilesystemsV2SharesResponse(shares.Get(oc.Client, req.Id))

}

// request struct for the ListExportLocationsSharedfilesystemsV2Shares
type ListExportLocationsSharedfilesystemsV2SharesRequest struct {
	Id string
}

func NewListExportLocationsSharedfilesystemsV2SharesRequest() *ListExportLocationsSharedfilesystemsV2SharesRequest {
	return &ListExportLocationsSharedfilesystemsV2SharesRequest{}
}

// response struct for the ListExportLocationsSharedfilesystemsV2Shares
type ListExportLocationsSharedfilesystemsV2SharesResponse struct {
	ListExportLocationsResult shares.ListExportLocationsResult
}

func NewListExportLocationsSharedfilesystemsV2SharesResponse(listExportLocationsResult shares.ListExportLocationsResult) *ListExportLocationsSharedfilesystemsV2SharesResponse {
	return &ListExportLocationsSharedfilesystemsV2SharesResponse{
		ListExportLocationsResult: listExportLocationsResult,
	}
}

// action function
func (oc *OpenstackClient) ListExportLocationsSharedfilesystemsV2Shares(req *ListExportLocationsSharedfilesystemsV2SharesRequest) *ListExportLocationsSharedfilesystemsV2SharesResponse {
	return NewListExportLocationsSharedfilesystemsV2SharesResponse(shares.ListExportLocations(oc.Client, req.Id))

}

// request struct for the GetExportLocationSharedfilesystemsV2Shares
type GetExportLocationSharedfilesystemsV2SharesRequest struct {
	ShareID string
	Id      string
}

func NewGetExportLocationSharedfilesystemsV2SharesRequest() *GetExportLocationSharedfilesystemsV2SharesRequest {
	return &GetExportLocationSharedfilesystemsV2SharesRequest{}
}

// response struct for the GetExportLocationSharedfilesystemsV2Shares
type GetExportLocationSharedfilesystemsV2SharesResponse struct {
	GetExportLocationResult shares.GetExportLocationResult
}

func NewGetExportLocationSharedfilesystemsV2SharesResponse(getExportLocationResult shares.GetExportLocationResult) *GetExportLocationSharedfilesystemsV2SharesResponse {
	return &GetExportLocationSharedfilesystemsV2SharesResponse{
		GetExportLocationResult: getExportLocationResult,
	}
}

// action function
func (oc *OpenstackClient) GetExportLocationSharedfilesystemsV2Shares(req *GetExportLocationSharedfilesystemsV2SharesRequest) *GetExportLocationSharedfilesystemsV2SharesResponse {
	return NewGetExportLocationSharedfilesystemsV2SharesResponse(shares.GetExportLocation(oc.Client, req.ShareID, req.Id))

}

// request struct for the GrantAccessSharedfilesystemsV2Shares
type GrantAccessSharedfilesystemsV2SharesRequest struct {
	Id   string
	Opts shares.GrantAccessOpts
}

func NewGrantAccessSharedfilesystemsV2SharesRequest() *GrantAccessSharedfilesystemsV2SharesRequest {
	return &GrantAccessSharedfilesystemsV2SharesRequest{}
}

// response struct for the GrantAccessSharedfilesystemsV2Shares
type GrantAccessSharedfilesystemsV2SharesResponse struct {
	GrantAccessResult shares.GrantAccessResult
}

func NewGrantAccessSharedfilesystemsV2SharesResponse(grantAccessResult shares.GrantAccessResult) *GrantAccessSharedfilesystemsV2SharesResponse {
	return &GrantAccessSharedfilesystemsV2SharesResponse{
		GrantAccessResult: grantAccessResult,
	}
}

// action function
func (oc *OpenstackClient) GrantAccessSharedfilesystemsV2Shares(req *GrantAccessSharedfilesystemsV2SharesRequest) *GrantAccessSharedfilesystemsV2SharesResponse {
	return NewGrantAccessSharedfilesystemsV2SharesResponse(shares.GrantAccess(oc.Client, req.Id, req.Opts))

}

// request struct for the RevokeAccessSharedfilesystemsV2Shares
type RevokeAccessSharedfilesystemsV2SharesRequest struct {
	Id   string
	Opts shares.RevokeAccessOpts
}

func NewRevokeAccessSharedfilesystemsV2SharesRequest() *RevokeAccessSharedfilesystemsV2SharesRequest {
	return &RevokeAccessSharedfilesystemsV2SharesRequest{}
}

// response struct for the RevokeAccessSharedfilesystemsV2Shares
type RevokeAccessSharedfilesystemsV2SharesResponse struct {
	RevokeAccessResult shares.RevokeAccessResult
}

func NewRevokeAccessSharedfilesystemsV2SharesResponse(revokeAccessResult shares.RevokeAccessResult) *RevokeAccessSharedfilesystemsV2SharesResponse {
	return &RevokeAccessSharedfilesystemsV2SharesResponse{
		RevokeAccessResult: revokeAccessResult,
	}
}

// action function
func (oc *OpenstackClient) RevokeAccessSharedfilesystemsV2Shares(req *RevokeAccessSharedfilesystemsV2SharesRequest) *RevokeAccessSharedfilesystemsV2SharesResponse {
	return NewRevokeAccessSharedfilesystemsV2SharesResponse(shares.RevokeAccess(oc.Client, req.Id, req.Opts))

}

// request struct for the ListAccessRightsSharedfilesystemsV2Shares
type ListAccessRightsSharedfilesystemsV2SharesRequest struct {
	Id string
}

func NewListAccessRightsSharedfilesystemsV2SharesRequest() *ListAccessRightsSharedfilesystemsV2SharesRequest {
	return &ListAccessRightsSharedfilesystemsV2SharesRequest{}
}

// response struct for the ListAccessRightsSharedfilesystemsV2Shares
type ListAccessRightsSharedfilesystemsV2SharesResponse struct {
	ListAccessRightsResult shares.ListAccessRightsResult
}

func NewListAccessRightsSharedfilesystemsV2SharesResponse(listAccessRightsResult shares.ListAccessRightsResult) *ListAccessRightsSharedfilesystemsV2SharesResponse {
	return &ListAccessRightsSharedfilesystemsV2SharesResponse{
		ListAccessRightsResult: listAccessRightsResult,
	}
}

// action function
func (oc *OpenstackClient) ListAccessRightsSharedfilesystemsV2Shares(req *ListAccessRightsSharedfilesystemsV2SharesRequest) *ListAccessRightsSharedfilesystemsV2SharesResponse {
	return NewListAccessRightsSharedfilesystemsV2SharesResponse(shares.ListAccessRights(oc.Client, req.Id))

}

// request struct for the ExtendSharedfilesystemsV2Shares
type ExtendSharedfilesystemsV2SharesRequest struct {
	Id   string
	Opts shares.ExtendOpts
}

func NewExtendSharedfilesystemsV2SharesRequest() *ExtendSharedfilesystemsV2SharesRequest {
	return &ExtendSharedfilesystemsV2SharesRequest{}
}

// response struct for the ExtendSharedfilesystemsV2Shares
type ExtendSharedfilesystemsV2SharesResponse struct {
	ExtendResult shares.ExtendResult
}

func NewExtendSharedfilesystemsV2SharesResponse(extendResult shares.ExtendResult) *ExtendSharedfilesystemsV2SharesResponse {
	return &ExtendSharedfilesystemsV2SharesResponse{
		ExtendResult: extendResult,
	}
}

// action function
func (oc *OpenstackClient) ExtendSharedfilesystemsV2Shares(req *ExtendSharedfilesystemsV2SharesRequest) *ExtendSharedfilesystemsV2SharesResponse {
	return NewExtendSharedfilesystemsV2SharesResponse(shares.Extend(oc.Client, req.Id, req.Opts))

}

// request struct for the ShrinkSharedfilesystemsV2Shares
type ShrinkSharedfilesystemsV2SharesRequest struct {
	Id   string
	Opts shares.ShrinkOpts
}

func NewShrinkSharedfilesystemsV2SharesRequest() *ShrinkSharedfilesystemsV2SharesRequest {
	return &ShrinkSharedfilesystemsV2SharesRequest{}
}

// response struct for the ShrinkSharedfilesystemsV2Shares
type ShrinkSharedfilesystemsV2SharesResponse struct {
	ShrinkResult shares.ShrinkResult
}

func NewShrinkSharedfilesystemsV2SharesResponse(shrinkResult shares.ShrinkResult) *ShrinkSharedfilesystemsV2SharesResponse {
	return &ShrinkSharedfilesystemsV2SharesResponse{
		ShrinkResult: shrinkResult,
	}
}

// action function
func (oc *OpenstackClient) ShrinkSharedfilesystemsV2Shares(req *ShrinkSharedfilesystemsV2SharesRequest) *ShrinkSharedfilesystemsV2SharesResponse {
	return NewShrinkSharedfilesystemsV2SharesResponse(shares.Shrink(oc.Client, req.Id, req.Opts))

}

// request struct for the UpdateSharedfilesystemsV2Shares
type UpdateSharedfilesystemsV2SharesRequest struct {
	Id   string
	Opts shares.UpdateOpts
}

func NewUpdateSharedfilesystemsV2SharesRequest() *UpdateSharedfilesystemsV2SharesRequest {
	return &UpdateSharedfilesystemsV2SharesRequest{}
}

// response struct for the UpdateSharedfilesystemsV2Shares
type UpdateSharedfilesystemsV2SharesResponse struct {
	UpdateResult shares.UpdateResult
}

func NewUpdateSharedfilesystemsV2SharesResponse(updateResult shares.UpdateResult) *UpdateSharedfilesystemsV2SharesResponse {
	return &UpdateSharedfilesystemsV2SharesResponse{
		UpdateResult: updateResult,
	}
}

// action function
func (oc *OpenstackClient) UpdateSharedfilesystemsV2Shares(req *UpdateSharedfilesystemsV2SharesRequest) *UpdateSharedfilesystemsV2SharesResponse {
	return NewUpdateSharedfilesystemsV2SharesResponse(shares.Update(oc.Client, req.Id, req.Opts))

}

// request struct for the GetMetadataSharedfilesystemsV2Shares
type GetMetadataSharedfilesystemsV2SharesRequest struct {
	Id string
}

func NewGetMetadataSharedfilesystemsV2SharesRequest() *GetMetadataSharedfilesystemsV2SharesRequest {
	return &GetMetadataSharedfilesystemsV2SharesRequest{}
}

// response struct for the GetMetadataSharedfilesystemsV2Shares
type GetMetadataSharedfilesystemsV2SharesResponse struct {
	MetadataResult shares.MetadataResult
}

func NewGetMetadataSharedfilesystemsV2SharesResponse(metadataResult shares.MetadataResult) *GetMetadataSharedfilesystemsV2SharesResponse {
	return &GetMetadataSharedfilesystemsV2SharesResponse{
		MetadataResult: metadataResult,
	}
}

// action function
func (oc *OpenstackClient) GetMetadataSharedfilesystemsV2Shares(req *GetMetadataSharedfilesystemsV2SharesRequest) *GetMetadataSharedfilesystemsV2SharesResponse {
	return NewGetMetadataSharedfilesystemsV2SharesResponse(shares.GetMetadata(oc.Client, req.Id))

}

// request struct for the GetMetadatumSharedfilesystemsV2Shares
type GetMetadatumSharedfilesystemsV2SharesRequest struct {
	Id  string
	Key string
}

func NewGetMetadatumSharedfilesystemsV2SharesRequest() *GetMetadatumSharedfilesystemsV2SharesRequest {
	return &GetMetadatumSharedfilesystemsV2SharesRequest{}
}

// response struct for the GetMetadatumSharedfilesystemsV2Shares
type GetMetadatumSharedfilesystemsV2SharesResponse struct {
	GetMetadatumResult shares.GetMetadatumResult
}

func NewGetMetadatumSharedfilesystemsV2SharesResponse(getMetadatumResult shares.GetMetadatumResult) *GetMetadatumSharedfilesystemsV2SharesResponse {
	return &GetMetadatumSharedfilesystemsV2SharesResponse{
		GetMetadatumResult: getMetadatumResult,
	}
}

// action function
func (oc *OpenstackClient) GetMetadatumSharedfilesystemsV2Shares(req *GetMetadatumSharedfilesystemsV2SharesRequest) *GetMetadatumSharedfilesystemsV2SharesResponse {
	return NewGetMetadatumSharedfilesystemsV2SharesResponse(shares.GetMetadatum(oc.Client, req.Id, req.Key))

}

// request struct for the SetMetadataSharedfilesystemsV2Shares
type SetMetadataSharedfilesystemsV2SharesRequest struct {
	Id   string
	Opts shares.SetMetadataOpts
}

func NewSetMetadataSharedfilesystemsV2SharesRequest() *SetMetadataSharedfilesystemsV2SharesRequest {
	return &SetMetadataSharedfilesystemsV2SharesRequest{}
}

// response struct for the SetMetadataSharedfilesystemsV2Shares
type SetMetadataSharedfilesystemsV2SharesResponse struct {
	MetadataResult shares.MetadataResult
}

func NewSetMetadataSharedfilesystemsV2SharesResponse(metadataResult shares.MetadataResult) *SetMetadataSharedfilesystemsV2SharesResponse {
	return &SetMetadataSharedfilesystemsV2SharesResponse{
		MetadataResult: metadataResult,
	}
}

// action function
func (oc *OpenstackClient) SetMetadataSharedfilesystemsV2Shares(req *SetMetadataSharedfilesystemsV2SharesRequest) *SetMetadataSharedfilesystemsV2SharesResponse {
	return NewSetMetadataSharedfilesystemsV2SharesResponse(shares.SetMetadata(oc.Client, req.Id, req.Opts))

}

// request struct for the UpdateMetadataSharedfilesystemsV2Shares
type UpdateMetadataSharedfilesystemsV2SharesRequest struct {
	Id   string
	Opts shares.UpdateMetadataOpts
}

func NewUpdateMetadataSharedfilesystemsV2SharesRequest() *UpdateMetadataSharedfilesystemsV2SharesRequest {
	return &UpdateMetadataSharedfilesystemsV2SharesRequest{}
}

// response struct for the UpdateMetadataSharedfilesystemsV2Shares
type UpdateMetadataSharedfilesystemsV2SharesResponse struct {
	MetadataResult shares.MetadataResult
}

func NewUpdateMetadataSharedfilesystemsV2SharesResponse(metadataResult shares.MetadataResult) *UpdateMetadataSharedfilesystemsV2SharesResponse {
	return &UpdateMetadataSharedfilesystemsV2SharesResponse{
		MetadataResult: metadataResult,
	}
}

// action function
func (oc *OpenstackClient) UpdateMetadataSharedfilesystemsV2Shares(req *UpdateMetadataSharedfilesystemsV2SharesRequest) *UpdateMetadataSharedfilesystemsV2SharesResponse {
	return NewUpdateMetadataSharedfilesystemsV2SharesResponse(shares.UpdateMetadata(oc.Client, req.Id, req.Opts))

}

// request struct for the DeleteMetadatumSharedfilesystemsV2Shares
type DeleteMetadatumSharedfilesystemsV2SharesRequest struct {
	Id  string
	Key string
}

func NewDeleteMetadatumSharedfilesystemsV2SharesRequest() *DeleteMetadatumSharedfilesystemsV2SharesRequest {
	return &DeleteMetadatumSharedfilesystemsV2SharesRequest{}
}

// response struct for the DeleteMetadatumSharedfilesystemsV2Shares
type DeleteMetadatumSharedfilesystemsV2SharesResponse struct {
	DeleteMetadatumResult shares.DeleteMetadatumResult
}

func NewDeleteMetadatumSharedfilesystemsV2SharesResponse(deleteMetadatumResult shares.DeleteMetadatumResult) *DeleteMetadatumSharedfilesystemsV2SharesResponse {
	return &DeleteMetadatumSharedfilesystemsV2SharesResponse{
		DeleteMetadatumResult: deleteMetadatumResult,
	}
}

// action function
func (oc *OpenstackClient) DeleteMetadatumSharedfilesystemsV2Shares(req *DeleteMetadatumSharedfilesystemsV2SharesRequest) *DeleteMetadatumSharedfilesystemsV2SharesResponse {
	return NewDeleteMetadatumSharedfilesystemsV2SharesResponse(shares.DeleteMetadatum(oc.Client, req.Id, req.Key))

}

// request struct for the RevertSharedfilesystemsV2Shares
type RevertSharedfilesystemsV2SharesRequest struct {
	Id   string
	Opts shares.RevertOpts
}

func NewRevertSharedfilesystemsV2SharesRequest() *RevertSharedfilesystemsV2SharesRequest {
	return &RevertSharedfilesystemsV2SharesRequest{}
}

// response struct for the RevertSharedfilesystemsV2Shares
type RevertSharedfilesystemsV2SharesResponse struct {
	RevertResult shares.RevertResult
}

func NewRevertSharedfilesystemsV2SharesResponse(revertResult shares.RevertResult) *RevertSharedfilesystemsV2SharesResponse {
	return &RevertSharedfilesystemsV2SharesResponse{
		RevertResult: revertResult,
	}
}

// action function
func (oc *OpenstackClient) RevertSharedfilesystemsV2Shares(req *RevertSharedfilesystemsV2SharesRequest) *RevertSharedfilesystemsV2SharesResponse {
	return NewRevertSharedfilesystemsV2SharesResponse(shares.Revert(oc.Client, req.Id, req.Opts))

}

// request struct for the ResetStatusSharedfilesystemsV2Shares
type ResetStatusSharedfilesystemsV2SharesRequest struct {
	Id   string
	Opts shares.ResetStatusOpts
}

func NewResetStatusSharedfilesystemsV2SharesRequest() *ResetStatusSharedfilesystemsV2SharesRequest {
	return &ResetStatusSharedfilesystemsV2SharesRequest{}
}

// response struct for the ResetStatusSharedfilesystemsV2Shares
type ResetStatusSharedfilesystemsV2SharesResponse struct {
	ResetStatusResult shares.ResetStatusResult
}

func NewResetStatusSharedfilesystemsV2SharesResponse(resetStatusResult shares.ResetStatusResult) *ResetStatusSharedfilesystemsV2SharesResponse {
	return &ResetStatusSharedfilesystemsV2SharesResponse{
		ResetStatusResult: resetStatusResult,
	}
}

// action function
func (oc *OpenstackClient) ResetStatusSharedfilesystemsV2Shares(req *ResetStatusSharedfilesystemsV2SharesRequest) *ResetStatusSharedfilesystemsV2SharesResponse {
	return NewResetStatusSharedfilesystemsV2SharesResponse(shares.ResetStatus(oc.Client, req.Id, req.Opts))

}

// request struct for the ForceDeleteSharedfilesystemsV2Shares
type ForceDeleteSharedfilesystemsV2SharesRequest struct {
	Id string
}

func NewForceDeleteSharedfilesystemsV2SharesRequest() *ForceDeleteSharedfilesystemsV2SharesRequest {
	return &ForceDeleteSharedfilesystemsV2SharesRequest{}
}

// response struct for the ForceDeleteSharedfilesystemsV2Shares
type ForceDeleteSharedfilesystemsV2SharesResponse struct {
	ForceDeleteResult shares.ForceDeleteResult
}

func NewForceDeleteSharedfilesystemsV2SharesResponse(forceDeleteResult shares.ForceDeleteResult) *ForceDeleteSharedfilesystemsV2SharesResponse {
	return &ForceDeleteSharedfilesystemsV2SharesResponse{
		ForceDeleteResult: forceDeleteResult,
	}
}

// action function
func (oc *OpenstackClient) ForceDeleteSharedfilesystemsV2Shares(req *ForceDeleteSharedfilesystemsV2SharesRequest) *ForceDeleteSharedfilesystemsV2SharesResponse {
	return NewForceDeleteSharedfilesystemsV2SharesResponse(shares.ForceDelete(oc.Client, req.Id))

}

// request struct for the UnmanageSharedfilesystemsV2Shares
type UnmanageSharedfilesystemsV2SharesRequest struct {
	Id string
}

func NewUnmanageSharedfilesystemsV2SharesRequest() *UnmanageSharedfilesystemsV2SharesRequest {
	return &UnmanageSharedfilesystemsV2SharesRequest{}
}

// response struct for the UnmanageSharedfilesystemsV2Shares
type UnmanageSharedfilesystemsV2SharesResponse struct {
	UnmanageResult shares.UnmanageResult
}

func NewUnmanageSharedfilesystemsV2SharesResponse(unmanageResult shares.UnmanageResult) *UnmanageSharedfilesystemsV2SharesResponse {
	return &UnmanageSharedfilesystemsV2SharesResponse{
		UnmanageResult: unmanageResult,
	}
}

// action function
func (oc *OpenstackClient) UnmanageSharedfilesystemsV2Shares(req *UnmanageSharedfilesystemsV2SharesRequest) *UnmanageSharedfilesystemsV2SharesResponse {
	return NewUnmanageSharedfilesystemsV2SharesResponse(shares.Unmanage(oc.Client, req.Id))

}
