package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/messaging/v2/claims"
)
//request struct for the CreateMessagingV2Claims
type CreateMessagingV2ClaimsRequest struct{
    QueueName string
    Opts claims.CreateOptsBuilder
}

func NewCreateMessagingV2ClaimsRequest()*CreateMessagingV2ClaimsRequest{
    return &CreateMessagingV2ClaimsRequest{}
}

//response struct for the CreateMessagingV2Claims
type CreateMessagingV2ClaimsResponse struct{
    CreateResult claims.CreateResult
}

func NewCreateMessagingV2ClaimsResponse(createResult claims.CreateResult,)*CreateMessagingV2ClaimsResponse {
    return &CreateMessagingV2ClaimsResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateMessagingV2Claims(req *CreateMessagingV2ClaimsRequest)(*CreateMessagingV2ClaimsResponse){
    return NewCreateMessagingV2ClaimsResponse(claims.Create(oc.client,req.QueueName,req.Opts, ))

}
//request struct for the GetMessagingV2Claims
type GetMessagingV2ClaimsRequest struct{
    QueueName string
    ClaimID string
}

func NewGetMessagingV2ClaimsRequest()*GetMessagingV2ClaimsRequest{
    return &GetMessagingV2ClaimsRequest{}
}

//response struct for the GetMessagingV2Claims
type GetMessagingV2ClaimsResponse struct{
    GetResult claims.GetResult
}

func NewGetMessagingV2ClaimsResponse(getResult claims.GetResult,)*GetMessagingV2ClaimsResponse {
    return &GetMessagingV2ClaimsResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetMessagingV2Claims(req *GetMessagingV2ClaimsRequest)(*GetMessagingV2ClaimsResponse){
    return NewGetMessagingV2ClaimsResponse(claims.Get(oc.client,req.QueueName,req.ClaimID, ))

}
//request struct for the UpdateMessagingV2Claims
type UpdateMessagingV2ClaimsRequest struct{
    QueueName string
    ClaimID string
    Opts claims.UpdateOptsBuilder
}

func NewUpdateMessagingV2ClaimsRequest()*UpdateMessagingV2ClaimsRequest{
    return &UpdateMessagingV2ClaimsRequest{}
}

//response struct for the UpdateMessagingV2Claims
type UpdateMessagingV2ClaimsResponse struct{
    UpdateResult claims.UpdateResult
}

func NewUpdateMessagingV2ClaimsResponse(updateResult claims.UpdateResult,)*UpdateMessagingV2ClaimsResponse {
    return &UpdateMessagingV2ClaimsResponse{
            UpdateResult:updateResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateMessagingV2Claims(req *UpdateMessagingV2ClaimsRequest)(*UpdateMessagingV2ClaimsResponse){
    return NewUpdateMessagingV2ClaimsResponse(claims.Update(oc.client,req.QueueName,req.ClaimID,req.Opts, ))

}
//request struct for the DeleteMessagingV2Claims
type DeleteMessagingV2ClaimsRequest struct{
    QueueName string
    ClaimID string
}

func NewDeleteMessagingV2ClaimsRequest()*DeleteMessagingV2ClaimsRequest{
    return &DeleteMessagingV2ClaimsRequest{}
}

//response struct for the DeleteMessagingV2Claims
type DeleteMessagingV2ClaimsResponse struct{
    DeleteResult claims.DeleteResult
}

func NewDeleteMessagingV2ClaimsResponse(deleteResult claims.DeleteResult,)*DeleteMessagingV2ClaimsResponse {
    return &DeleteMessagingV2ClaimsResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteMessagingV2Claims(req *DeleteMessagingV2ClaimsRequest)(*DeleteMessagingV2ClaimsResponse){
    return NewDeleteMessagingV2ClaimsResponse(claims.Delete(oc.client,req.QueueName,req.ClaimID, ))

}