package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/identity/v3/domains"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the ListIdentityV3Domains
type ListIdentityV3DomainsRequest struct{
    Opts domains.ListOptsBuilder
}

func NewListIdentityV3DomainsRequest()*ListIdentityV3DomainsRequest{
    return &ListIdentityV3DomainsRequest{}
}

//response struct for the ListIdentityV3Domains
type ListIdentityV3DomainsResponse struct{
    Pager pagination.Pager
}

func NewListIdentityV3DomainsResponse(pager pagination.Pager,)*ListIdentityV3DomainsResponse {
    return &ListIdentityV3DomainsResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListIdentityV3Domains(request *ListIdentityV3DomainsRequest)(*ListIdentityV3DomainsResponse){
    return NewListIdentityV3DomainsResponse(domains.List(oc.client,request.Opts, ))

}
//request struct for the GetIdentityV3Domains
type GetIdentityV3DomainsRequest struct{
    Id string
}

func NewGetIdentityV3DomainsRequest()*GetIdentityV3DomainsRequest{
    return &GetIdentityV3DomainsRequest{}
}

//response struct for the GetIdentityV3Domains
type GetIdentityV3DomainsResponse struct{
    GetResult domains.GetResult
}

func NewGetIdentityV3DomainsResponse(getResult domains.GetResult,)*GetIdentityV3DomainsResponse {
    return &GetIdentityV3DomainsResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetIdentityV3Domains(request *GetIdentityV3DomainsRequest)(*GetIdentityV3DomainsResponse){
    return NewGetIdentityV3DomainsResponse(domains.Get(oc.client,request.Id, ))

}
//request struct for the CreateIdentityV3Domains
type CreateIdentityV3DomainsRequest struct{
    Opts domains.CreateOptsBuilder
}

func NewCreateIdentityV3DomainsRequest()*CreateIdentityV3DomainsRequest{
    return &CreateIdentityV3DomainsRequest{}
}

//response struct for the CreateIdentityV3Domains
type CreateIdentityV3DomainsResponse struct{
    CreateResult domains.CreateResult
}

func NewCreateIdentityV3DomainsResponse(createResult domains.CreateResult,)*CreateIdentityV3DomainsResponse {
    return &CreateIdentityV3DomainsResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateIdentityV3Domains(request *CreateIdentityV3DomainsRequest)(*CreateIdentityV3DomainsResponse){
    return NewCreateIdentityV3DomainsResponse(domains.Create(oc.client,request.Opts, ))

}
//request struct for the DeleteIdentityV3Domains
type DeleteIdentityV3DomainsRequest struct{
    DomainID string
}

func NewDeleteIdentityV3DomainsRequest()*DeleteIdentityV3DomainsRequest{
    return &DeleteIdentityV3DomainsRequest{}
}

//response struct for the DeleteIdentityV3Domains
type DeleteIdentityV3DomainsResponse struct{
    DeleteResult domains.DeleteResult
}

func NewDeleteIdentityV3DomainsResponse(deleteResult domains.DeleteResult,)*DeleteIdentityV3DomainsResponse {
    return &DeleteIdentityV3DomainsResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteIdentityV3Domains(request *DeleteIdentityV3DomainsRequest)(*DeleteIdentityV3DomainsResponse){
    return NewDeleteIdentityV3DomainsResponse(domains.Delete(oc.client,request.DomainID, ))

}
//request struct for the UpdateIdentityV3Domains
type UpdateIdentityV3DomainsRequest struct{
    Id string
    Opts domains.UpdateOptsBuilder
}

func NewUpdateIdentityV3DomainsRequest()*UpdateIdentityV3DomainsRequest{
    return &UpdateIdentityV3DomainsRequest{}
}

//response struct for the UpdateIdentityV3Domains
type UpdateIdentityV3DomainsResponse struct{
    UpdateResult domains.UpdateResult
}

func NewUpdateIdentityV3DomainsResponse(updateResult domains.UpdateResult,)*UpdateIdentityV3DomainsResponse {
    return &UpdateIdentityV3DomainsResponse{
            UpdateResult:updateResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateIdentityV3Domains(request *UpdateIdentityV3DomainsRequest)(*UpdateIdentityV3DomainsResponse){
    return NewUpdateIdentityV3DomainsResponse(domains.Update(oc.client,request.Id,request.Opts, ))

}