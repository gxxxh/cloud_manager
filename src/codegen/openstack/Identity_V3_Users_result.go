package openstack

// Code generated by cloud manager.

import (
	"github.com/gophercloud/gophercloud/openstack/identity/v3/users"
)

// extract response info from pager for ListIdentityV3Users
func ExtractListIdentityV3UsersResponse(response *ListIdentityV3UsersResponse) ([]users.User, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return users.ExtractUsers(page)
}

// call result's extract function
func ExtractGetIdentityV3UsersResponse(response *GetIdentityV3UsersResponse) (interface{}, error) {
	return response.GetResult.Body, response.GetResult.Err
}

// call result's extract function
func ExtractCreateIdentityV3UsersResponse(response *CreateIdentityV3UsersResponse) (interface{}, error) {
	return response.CreateResult.Body, response.CreateResult.Err
}

// call result's extract function
func ExtractUpdateIdentityV3UsersResponse(response *UpdateIdentityV3UsersResponse) (interface{}, error) {
	return response.UpdateResult.Body, response.UpdateResult.Err
}

// call result's extract function
func ExtractChangePasswordIdentityV3UsersResponse(response *ChangePasswordIdentityV3UsersResponse) (interface{}, error) {
	return response.ChangePasswordResult.Body, response.ChangePasswordResult.Err
}

// call result's extract function
func ExtractDeleteIdentityV3UsersResponse(response *DeleteIdentityV3UsersResponse) (interface{}, error) {
	return response.DeleteResult.Body, response.DeleteResult.Err
}

// extract response info from pager for ListGroupsIdentityV3Users
func ExtractListGroupsIdentityV3UsersResponse(response *ListGroupsIdentityV3UsersResponse) ([]users.User, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return users.ExtractUsers(page)
}

// call result's extract function
func ExtractAddToGroupIdentityV3UsersResponse(response *AddToGroupIdentityV3UsersResponse) (interface{}, error) {
	return response.AddToGroupResult.Body, response.AddToGroupResult.Err
}

// call result's extract function
func ExtractIsMemberOfGroupIdentityV3UsersResponse(response *IsMemberOfGroupIdentityV3UsersResponse) (interface{}, error) {
	return response.IsMemberOfGroupResult.Body, response.IsMemberOfGroupResult.Err
}

// call result's extract function
func ExtractRemoveFromGroupIdentityV3UsersResponse(response *RemoveFromGroupIdentityV3UsersResponse) (interface{}, error) {
	return response.RemoveFromGroupResult.Body, response.RemoveFromGroupResult.Err
}

// extract response info from pager for ListProjectsIdentityV3Users
func ExtractListProjectsIdentityV3UsersResponse(response *ListProjectsIdentityV3UsersResponse) ([]users.User, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return users.ExtractUsers(page)
}

// extract response info from pager for ListInGroupIdentityV3Users
func ExtractListInGroupIdentityV3UsersResponse(response *ListInGroupIdentityV3UsersResponse) ([]users.User, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return users.ExtractUsers(page)
}
