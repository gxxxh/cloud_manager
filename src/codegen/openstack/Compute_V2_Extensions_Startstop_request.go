package openstack

// Code generated by cloud manager.

import (
    "github.com/gophercloud/gophercloud/openstack/compute/v2/extensions/startstop"
)
//request struct for the StartComputeV2ExtensionsStartstop
type StartComputeV2ExtensionsStartstopRequest struct{
    Id string
}

func NewStartComputeV2ExtensionsStartstopRequest()*StartComputeV2ExtensionsStartstopRequest{
    return &StartComputeV2ExtensionsStartstopRequest{}
}

//response struct for the StartComputeV2ExtensionsStartstop
type StartComputeV2ExtensionsStartstopResponse struct{
    StartResult startstop.StartResult
}

func NewStartComputeV2ExtensionsStartstopResponse(startResult startstop.StartResult,)*StartComputeV2ExtensionsStartstopResponse {
    return &StartComputeV2ExtensionsStartstopResponse{
            StartResult:startResult,
    }
}

// action function
func (oc *OpenstackClient) StartComputeV2ExtensionsStartstop(req *StartComputeV2ExtensionsStartstopRequest)(*StartComputeV2ExtensionsStartstopResponse){
    return NewStartComputeV2ExtensionsStartstopResponse(startstop.Start(oc.Client,req.Id, ))

}
//request struct for the StopComputeV2ExtensionsStartstop
type StopComputeV2ExtensionsStartstopRequest struct{
    Id string
}

func NewStopComputeV2ExtensionsStartstopRequest()*StopComputeV2ExtensionsStartstopRequest{
    return &StopComputeV2ExtensionsStartstopRequest{}
}

//response struct for the StopComputeV2ExtensionsStartstop
type StopComputeV2ExtensionsStartstopResponse struct{
    StopResult startstop.StopResult
}

func NewStopComputeV2ExtensionsStartstopResponse(stopResult startstop.StopResult,)*StopComputeV2ExtensionsStartstopResponse {
    return &StopComputeV2ExtensionsStartstopResponse{
            StopResult:stopResult,
    }
}

// action function
func (oc *OpenstackClient) StopComputeV2ExtensionsStartstop(req *StopComputeV2ExtensionsStartstopRequest)(*StopComputeV2ExtensionsStartstopResponse){
    return NewStopComputeV2ExtensionsStartstopResponse(startstop.Stop(oc.Client,req.Id, ))

}