package openstack

// Code generated by cloud manager.

import (
	"github.com/gophercloud/gophercloud/openstack/identity/v3/roles"
)

// extract response info from pager for ListIdentityV3Roles
func ExtractListIdentityV3RolesResponse(response *ListIdentityV3RolesResponse) ([]roles.Role, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return roles.ExtractRoles(page)
}

// call result's extract function
func ExtractGetIdentityV3RolesResponse(response *GetIdentityV3RolesResponse) (interface{}, error) {
	return response.GetResult.Body, response.GetResult.Err
}

// call result's extract function
func ExtractCreateIdentityV3RolesResponse(response *CreateIdentityV3RolesResponse) (interface{}, error) {
	return response.CreateResult.Body, response.CreateResult.Err
}

// call result's extract function
func ExtractUpdateIdentityV3RolesResponse(response *UpdateIdentityV3RolesResponse) (interface{}, error) {
	return response.UpdateResult.Body, response.UpdateResult.Err
}

// call result's extract function
func ExtractDeleteIdentityV3RolesResponse(response *DeleteIdentityV3RolesResponse) (interface{}, error) {
	return response.DeleteResult.Body, response.DeleteResult.Err
}

// extract response info from pager for ListAssignmentsIdentityV3Roles
func ExtractListAssignmentsIdentityV3RolesResponse(response *ListAssignmentsIdentityV3RolesResponse) ([]roles.RoleAssignment, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return roles.ExtractRoleAssignments(page)
}

// extract response info from pager for ListAssignmentsOnResourceIdentityV3Roles
func ExtractListAssignmentsOnResourceIdentityV3RolesResponse(response *ListAssignmentsOnResourceIdentityV3RolesResponse) ([]roles.Role, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return roles.ExtractRoles(page)
}

// call result's extract function
func ExtractAssignIdentityV3RolesResponse(response *AssignIdentityV3RolesResponse) (interface{}, error) {
	return response.AssignmentResult.Body, response.AssignmentResult.Err
}

// call result's extract function
func ExtractUnassignIdentityV3RolesResponse(response *UnassignIdentityV3RolesResponse) (interface{}, error) {
	return response.UnassignmentResult.Body, response.UnassignmentResult.Err
}
