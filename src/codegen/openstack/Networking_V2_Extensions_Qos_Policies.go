package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/networking/v2/extensions/qos/policies"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the ListNetworkingV2ExtensionsQosPolicies
type ListNetworkingV2ExtensionsQosPoliciesRequest struct{
    Opts policies.PolicyListOptsBuilder
}

func NewListNetworkingV2ExtensionsQosPoliciesRequest()*ListNetworkingV2ExtensionsQosPoliciesRequest{
    return &ListNetworkingV2ExtensionsQosPoliciesRequest{}
}

//response struct for the ListNetworkingV2ExtensionsQosPolicies
type ListNetworkingV2ExtensionsQosPoliciesResponse struct{
    Pager pagination.Pager
}

func NewListNetworkingV2ExtensionsQosPoliciesResponse(pager pagination.Pager,)*ListNetworkingV2ExtensionsQosPoliciesResponse {
    return &ListNetworkingV2ExtensionsQosPoliciesResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListNetworkingV2ExtensionsQosPolicies(req *ListNetworkingV2ExtensionsQosPoliciesRequest)(*ListNetworkingV2ExtensionsQosPoliciesResponse){
    return NewListNetworkingV2ExtensionsQosPoliciesResponse(policies.List(oc.client,req.Opts, ))

}
//request struct for the GetNetworkingV2ExtensionsQosPolicies
type GetNetworkingV2ExtensionsQosPoliciesRequest struct{
    Id string
}

func NewGetNetworkingV2ExtensionsQosPoliciesRequest()*GetNetworkingV2ExtensionsQosPoliciesRequest{
    return &GetNetworkingV2ExtensionsQosPoliciesRequest{}
}

//response struct for the GetNetworkingV2ExtensionsQosPolicies
type GetNetworkingV2ExtensionsQosPoliciesResponse struct{
    GetResult policies.GetResult
}

func NewGetNetworkingV2ExtensionsQosPoliciesResponse(getResult policies.GetResult,)*GetNetworkingV2ExtensionsQosPoliciesResponse {
    return &GetNetworkingV2ExtensionsQosPoliciesResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetNetworkingV2ExtensionsQosPolicies(req *GetNetworkingV2ExtensionsQosPoliciesRequest)(*GetNetworkingV2ExtensionsQosPoliciesResponse){
    return NewGetNetworkingV2ExtensionsQosPoliciesResponse(policies.Get(oc.client,req.Id, ))

}
//request struct for the CreateNetworkingV2ExtensionsQosPolicies
type CreateNetworkingV2ExtensionsQosPoliciesRequest struct{
    Opts policies.CreateOptsBuilder
}

func NewCreateNetworkingV2ExtensionsQosPoliciesRequest()*CreateNetworkingV2ExtensionsQosPoliciesRequest{
    return &CreateNetworkingV2ExtensionsQosPoliciesRequest{}
}

//response struct for the CreateNetworkingV2ExtensionsQosPolicies
type CreateNetworkingV2ExtensionsQosPoliciesResponse struct{
    CreateResult policies.CreateResult
}

func NewCreateNetworkingV2ExtensionsQosPoliciesResponse(createResult policies.CreateResult,)*CreateNetworkingV2ExtensionsQosPoliciesResponse {
    return &CreateNetworkingV2ExtensionsQosPoliciesResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateNetworkingV2ExtensionsQosPolicies(req *CreateNetworkingV2ExtensionsQosPoliciesRequest)(*CreateNetworkingV2ExtensionsQosPoliciesResponse){
    return NewCreateNetworkingV2ExtensionsQosPoliciesResponse(policies.Create(oc.client,req.Opts, ))

}
//request struct for the UpdateNetworkingV2ExtensionsQosPolicies
type UpdateNetworkingV2ExtensionsQosPoliciesRequest struct{
    PolicyID string
    Opts policies.UpdateOptsBuilder
}

func NewUpdateNetworkingV2ExtensionsQosPoliciesRequest()*UpdateNetworkingV2ExtensionsQosPoliciesRequest{
    return &UpdateNetworkingV2ExtensionsQosPoliciesRequest{}
}

//response struct for the UpdateNetworkingV2ExtensionsQosPolicies
type UpdateNetworkingV2ExtensionsQosPoliciesResponse struct{
    UpdateResult policies.UpdateResult
}

func NewUpdateNetworkingV2ExtensionsQosPoliciesResponse(updateResult policies.UpdateResult,)*UpdateNetworkingV2ExtensionsQosPoliciesResponse {
    return &UpdateNetworkingV2ExtensionsQosPoliciesResponse{
            UpdateResult:updateResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateNetworkingV2ExtensionsQosPolicies(req *UpdateNetworkingV2ExtensionsQosPoliciesRequest)(*UpdateNetworkingV2ExtensionsQosPoliciesResponse){
    return NewUpdateNetworkingV2ExtensionsQosPoliciesResponse(policies.Update(oc.client,req.PolicyID,req.Opts, ))

}
//request struct for the DeleteNetworkingV2ExtensionsQosPolicies
type DeleteNetworkingV2ExtensionsQosPoliciesRequest struct{
    Id string
}

func NewDeleteNetworkingV2ExtensionsQosPoliciesRequest()*DeleteNetworkingV2ExtensionsQosPoliciesRequest{
    return &DeleteNetworkingV2ExtensionsQosPoliciesRequest{}
}

//response struct for the DeleteNetworkingV2ExtensionsQosPolicies
type DeleteNetworkingV2ExtensionsQosPoliciesResponse struct{
    DeleteResult policies.DeleteResult
}

func NewDeleteNetworkingV2ExtensionsQosPoliciesResponse(deleteResult policies.DeleteResult,)*DeleteNetworkingV2ExtensionsQosPoliciesResponse {
    return &DeleteNetworkingV2ExtensionsQosPoliciesResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteNetworkingV2ExtensionsQosPolicies(req *DeleteNetworkingV2ExtensionsQosPoliciesRequest)(*DeleteNetworkingV2ExtensionsQosPoliciesResponse){
    return NewDeleteNetworkingV2ExtensionsQosPoliciesResponse(policies.Delete(oc.client,req.Id, ))

}