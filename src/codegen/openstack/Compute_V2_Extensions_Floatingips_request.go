package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/compute/v2/extensions/floatingips"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the ListComputeV2ExtensionsFloatingips
type ListComputeV2ExtensionsFloatingipsRequest struct{
}

func NewListComputeV2ExtensionsFloatingipsRequest()*ListComputeV2ExtensionsFloatingipsRequest{
    return &ListComputeV2ExtensionsFloatingipsRequest{}
}

//response struct for the ListComputeV2ExtensionsFloatingips
type ListComputeV2ExtensionsFloatingipsResponse struct{
    Pager pagination.Pager
}

func NewListComputeV2ExtensionsFloatingipsResponse(pager pagination.Pager,)*ListComputeV2ExtensionsFloatingipsResponse {
    return &ListComputeV2ExtensionsFloatingipsResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListComputeV2ExtensionsFloatingips(req *ListComputeV2ExtensionsFloatingipsRequest)(*ListComputeV2ExtensionsFloatingipsResponse){
    return NewListComputeV2ExtensionsFloatingipsResponse(floatingips.List(oc.Client, ))

}
//request struct for the CreateComputeV2ExtensionsFloatingips
type CreateComputeV2ExtensionsFloatingipsRequest struct{
    Opts floatingips.CreateOpts
}

func NewCreateComputeV2ExtensionsFloatingipsRequest()*CreateComputeV2ExtensionsFloatingipsRequest{
    return &CreateComputeV2ExtensionsFloatingipsRequest{}
}

//response struct for the CreateComputeV2ExtensionsFloatingips
type CreateComputeV2ExtensionsFloatingipsResponse struct{
    CreateResult floatingips.CreateResult
}

func NewCreateComputeV2ExtensionsFloatingipsResponse(createResult floatingips.CreateResult,)*CreateComputeV2ExtensionsFloatingipsResponse {
    return &CreateComputeV2ExtensionsFloatingipsResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateComputeV2ExtensionsFloatingips(req *CreateComputeV2ExtensionsFloatingipsRequest)(*CreateComputeV2ExtensionsFloatingipsResponse){
    return NewCreateComputeV2ExtensionsFloatingipsResponse(floatingips.Create(oc.Client,req.Opts, ))

}
//request struct for the GetComputeV2ExtensionsFloatingips
type GetComputeV2ExtensionsFloatingipsRequest struct{
    Id string
}

func NewGetComputeV2ExtensionsFloatingipsRequest()*GetComputeV2ExtensionsFloatingipsRequest{
    return &GetComputeV2ExtensionsFloatingipsRequest{}
}

//response struct for the GetComputeV2ExtensionsFloatingips
type GetComputeV2ExtensionsFloatingipsResponse struct{
    GetResult floatingips.GetResult
}

func NewGetComputeV2ExtensionsFloatingipsResponse(getResult floatingips.GetResult,)*GetComputeV2ExtensionsFloatingipsResponse {
    return &GetComputeV2ExtensionsFloatingipsResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetComputeV2ExtensionsFloatingips(req *GetComputeV2ExtensionsFloatingipsRequest)(*GetComputeV2ExtensionsFloatingipsResponse){
    return NewGetComputeV2ExtensionsFloatingipsResponse(floatingips.Get(oc.Client,req.Id, ))

}
//request struct for the DeleteComputeV2ExtensionsFloatingips
type DeleteComputeV2ExtensionsFloatingipsRequest struct{
    Id string
}

func NewDeleteComputeV2ExtensionsFloatingipsRequest()*DeleteComputeV2ExtensionsFloatingipsRequest{
    return &DeleteComputeV2ExtensionsFloatingipsRequest{}
}

//response struct for the DeleteComputeV2ExtensionsFloatingips
type DeleteComputeV2ExtensionsFloatingipsResponse struct{
    DeleteResult floatingips.DeleteResult
}

func NewDeleteComputeV2ExtensionsFloatingipsResponse(deleteResult floatingips.DeleteResult,)*DeleteComputeV2ExtensionsFloatingipsResponse {
    return &DeleteComputeV2ExtensionsFloatingipsResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteComputeV2ExtensionsFloatingips(req *DeleteComputeV2ExtensionsFloatingipsRequest)(*DeleteComputeV2ExtensionsFloatingipsResponse){
    return NewDeleteComputeV2ExtensionsFloatingipsResponse(floatingips.Delete(oc.Client,req.Id, ))

}
//request struct for the AssociateInstanceComputeV2ExtensionsFloatingips
type AssociateInstanceComputeV2ExtensionsFloatingipsRequest struct{
    ServerID string
    Opts floatingips.AssociateOpts
}

func NewAssociateInstanceComputeV2ExtensionsFloatingipsRequest()*AssociateInstanceComputeV2ExtensionsFloatingipsRequest{
    return &AssociateInstanceComputeV2ExtensionsFloatingipsRequest{}
}

//response struct for the AssociateInstanceComputeV2ExtensionsFloatingips
type AssociateInstanceComputeV2ExtensionsFloatingipsResponse struct{
    AssociateResult floatingips.AssociateResult
}

func NewAssociateInstanceComputeV2ExtensionsFloatingipsResponse(associateResult floatingips.AssociateResult,)*AssociateInstanceComputeV2ExtensionsFloatingipsResponse {
    return &AssociateInstanceComputeV2ExtensionsFloatingipsResponse{
            AssociateResult:associateResult,
    }
}

// action function
func (oc *OpenstackClient) AssociateInstanceComputeV2ExtensionsFloatingips(req *AssociateInstanceComputeV2ExtensionsFloatingipsRequest)(*AssociateInstanceComputeV2ExtensionsFloatingipsResponse){
    return NewAssociateInstanceComputeV2ExtensionsFloatingipsResponse(floatingips.AssociateInstance(oc.Client,req.ServerID,req.Opts, ))

}
//request struct for the DisassociateInstanceComputeV2ExtensionsFloatingips
type DisassociateInstanceComputeV2ExtensionsFloatingipsRequest struct{
    ServerID string
    Opts floatingips.DisassociateOpts
}

func NewDisassociateInstanceComputeV2ExtensionsFloatingipsRequest()*DisassociateInstanceComputeV2ExtensionsFloatingipsRequest{
    return &DisassociateInstanceComputeV2ExtensionsFloatingipsRequest{}
}

//response struct for the DisassociateInstanceComputeV2ExtensionsFloatingips
type DisassociateInstanceComputeV2ExtensionsFloatingipsResponse struct{
    DisassociateResult floatingips.DisassociateResult
}

func NewDisassociateInstanceComputeV2ExtensionsFloatingipsResponse(disassociateResult floatingips.DisassociateResult,)*DisassociateInstanceComputeV2ExtensionsFloatingipsResponse {
    return &DisassociateInstanceComputeV2ExtensionsFloatingipsResponse{
            DisassociateResult:disassociateResult,
    }
}

// action function
func (oc *OpenstackClient) DisassociateInstanceComputeV2ExtensionsFloatingips(req *DisassociateInstanceComputeV2ExtensionsFloatingipsRequest)(*DisassociateInstanceComputeV2ExtensionsFloatingipsResponse){
    return NewDisassociateInstanceComputeV2ExtensionsFloatingipsResponse(floatingips.DisassociateInstance(oc.Client,req.ServerID,req.Opts, ))

}