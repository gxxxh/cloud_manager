package openstack

// Code generated by cloud manager.

import (
    "github.com/gophercloud/gophercloud/openstack/keymanager/v1/acls"
)
//request struct for the GetContainerACLKeymanagerV1Acls
type GetContainerACLKeymanagerV1AclsRequest struct{
    ContainerID string
}

func NewGetContainerACLKeymanagerV1AclsRequest()*GetContainerACLKeymanagerV1AclsRequest{
    return &GetContainerACLKeymanagerV1AclsRequest{}
}

//response struct for the GetContainerACLKeymanagerV1Acls
type GetContainerACLKeymanagerV1AclsResponse struct{
    ACLResult acls.ACLResult
}

func NewGetContainerACLKeymanagerV1AclsResponse(aCLResult acls.ACLResult,)*GetContainerACLKeymanagerV1AclsResponse {
    return &GetContainerACLKeymanagerV1AclsResponse{
            ACLResult:aCLResult,
    }
}

// action function
func (oc *OpenstackClient) GetContainerACLKeymanagerV1Acls(req *GetContainerACLKeymanagerV1AclsRequest)(*GetContainerACLKeymanagerV1AclsResponse){
    return NewGetContainerACLKeymanagerV1AclsResponse(acls.GetContainerACL(oc.Client,req.ContainerID, ))

}
//request struct for the GetSecretACLKeymanagerV1Acls
type GetSecretACLKeymanagerV1AclsRequest struct{
    SecretID string
}

func NewGetSecretACLKeymanagerV1AclsRequest()*GetSecretACLKeymanagerV1AclsRequest{
    return &GetSecretACLKeymanagerV1AclsRequest{}
}

//response struct for the GetSecretACLKeymanagerV1Acls
type GetSecretACLKeymanagerV1AclsResponse struct{
    ACLResult acls.ACLResult
}

func NewGetSecretACLKeymanagerV1AclsResponse(aCLResult acls.ACLResult,)*GetSecretACLKeymanagerV1AclsResponse {
    return &GetSecretACLKeymanagerV1AclsResponse{
            ACLResult:aCLResult,
    }
}

// action function
func (oc *OpenstackClient) GetSecretACLKeymanagerV1Acls(req *GetSecretACLKeymanagerV1AclsRequest)(*GetSecretACLKeymanagerV1AclsResponse){
    return NewGetSecretACLKeymanagerV1AclsResponse(acls.GetSecretACL(oc.Client,req.SecretID, ))

}
//request struct for the SetContainerACLKeymanagerV1Acls
type SetContainerACLKeymanagerV1AclsRequest struct{
    ContainerID string
    Opts acls.SetOpts
}

func NewSetContainerACLKeymanagerV1AclsRequest()*SetContainerACLKeymanagerV1AclsRequest{
    return &SetContainerACLKeymanagerV1AclsRequest{}
}

//response struct for the SetContainerACLKeymanagerV1Acls
type SetContainerACLKeymanagerV1AclsResponse struct{
    ACLRefResult acls.ACLRefResult
}

func NewSetContainerACLKeymanagerV1AclsResponse(aCLRefResult acls.ACLRefResult,)*SetContainerACLKeymanagerV1AclsResponse {
    return &SetContainerACLKeymanagerV1AclsResponse{
            ACLRefResult:aCLRefResult,
    }
}

// action function
func (oc *OpenstackClient) SetContainerACLKeymanagerV1Acls(req *SetContainerACLKeymanagerV1AclsRequest)(*SetContainerACLKeymanagerV1AclsResponse){
    return NewSetContainerACLKeymanagerV1AclsResponse(acls.SetContainerACL(oc.Client,req.ContainerID,req.Opts, ))

}
//request struct for the SetSecretACLKeymanagerV1Acls
type SetSecretACLKeymanagerV1AclsRequest struct{
    SecretID string
    Opts acls.SetOpts
}

func NewSetSecretACLKeymanagerV1AclsRequest()*SetSecretACLKeymanagerV1AclsRequest{
    return &SetSecretACLKeymanagerV1AclsRequest{}
}

//response struct for the SetSecretACLKeymanagerV1Acls
type SetSecretACLKeymanagerV1AclsResponse struct{
    ACLRefResult acls.ACLRefResult
}

func NewSetSecretACLKeymanagerV1AclsResponse(aCLRefResult acls.ACLRefResult,)*SetSecretACLKeymanagerV1AclsResponse {
    return &SetSecretACLKeymanagerV1AclsResponse{
            ACLRefResult:aCLRefResult,
    }
}

// action function
func (oc *OpenstackClient) SetSecretACLKeymanagerV1Acls(req *SetSecretACLKeymanagerV1AclsRequest)(*SetSecretACLKeymanagerV1AclsResponse){
    return NewSetSecretACLKeymanagerV1AclsResponse(acls.SetSecretACL(oc.Client,req.SecretID,req.Opts, ))

}
//request struct for the UpdateContainerACLKeymanagerV1Acls
type UpdateContainerACLKeymanagerV1AclsRequest struct{
    ContainerID string
    Opts acls.SetOpts
}

func NewUpdateContainerACLKeymanagerV1AclsRequest()*UpdateContainerACLKeymanagerV1AclsRequest{
    return &UpdateContainerACLKeymanagerV1AclsRequest{}
}

//response struct for the UpdateContainerACLKeymanagerV1Acls
type UpdateContainerACLKeymanagerV1AclsResponse struct{
    ACLRefResult acls.ACLRefResult
}

func NewUpdateContainerACLKeymanagerV1AclsResponse(aCLRefResult acls.ACLRefResult,)*UpdateContainerACLKeymanagerV1AclsResponse {
    return &UpdateContainerACLKeymanagerV1AclsResponse{
            ACLRefResult:aCLRefResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateContainerACLKeymanagerV1Acls(req *UpdateContainerACLKeymanagerV1AclsRequest)(*UpdateContainerACLKeymanagerV1AclsResponse){
    return NewUpdateContainerACLKeymanagerV1AclsResponse(acls.UpdateContainerACL(oc.Client,req.ContainerID,req.Opts, ))

}
//request struct for the UpdateSecretACLKeymanagerV1Acls
type UpdateSecretACLKeymanagerV1AclsRequest struct{
    SecretID string
    Opts acls.SetOpts
}

func NewUpdateSecretACLKeymanagerV1AclsRequest()*UpdateSecretACLKeymanagerV1AclsRequest{
    return &UpdateSecretACLKeymanagerV1AclsRequest{}
}

//response struct for the UpdateSecretACLKeymanagerV1Acls
type UpdateSecretACLKeymanagerV1AclsResponse struct{
    ACLRefResult acls.ACLRefResult
}

func NewUpdateSecretACLKeymanagerV1AclsResponse(aCLRefResult acls.ACLRefResult,)*UpdateSecretACLKeymanagerV1AclsResponse {
    return &UpdateSecretACLKeymanagerV1AclsResponse{
            ACLRefResult:aCLRefResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateSecretACLKeymanagerV1Acls(req *UpdateSecretACLKeymanagerV1AclsRequest)(*UpdateSecretACLKeymanagerV1AclsResponse){
    return NewUpdateSecretACLKeymanagerV1AclsResponse(acls.UpdateSecretACL(oc.Client,req.SecretID,req.Opts, ))

}
//request struct for the DeleteContainerACLKeymanagerV1Acls
type DeleteContainerACLKeymanagerV1AclsRequest struct{
    ContainerID string
}

func NewDeleteContainerACLKeymanagerV1AclsRequest()*DeleteContainerACLKeymanagerV1AclsRequest{
    return &DeleteContainerACLKeymanagerV1AclsRequest{}
}

//response struct for the DeleteContainerACLKeymanagerV1Acls
type DeleteContainerACLKeymanagerV1AclsResponse struct{
    DeleteResult acls.DeleteResult
}

func NewDeleteContainerACLKeymanagerV1AclsResponse(deleteResult acls.DeleteResult,)*DeleteContainerACLKeymanagerV1AclsResponse {
    return &DeleteContainerACLKeymanagerV1AclsResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteContainerACLKeymanagerV1Acls(req *DeleteContainerACLKeymanagerV1AclsRequest)(*DeleteContainerACLKeymanagerV1AclsResponse){
    return NewDeleteContainerACLKeymanagerV1AclsResponse(acls.DeleteContainerACL(oc.Client,req.ContainerID, ))

}
//request struct for the DeleteSecretACLKeymanagerV1Acls
type DeleteSecretACLKeymanagerV1AclsRequest struct{
    SecretID string
}

func NewDeleteSecretACLKeymanagerV1AclsRequest()*DeleteSecretACLKeymanagerV1AclsRequest{
    return &DeleteSecretACLKeymanagerV1AclsRequest{}
}

//response struct for the DeleteSecretACLKeymanagerV1Acls
type DeleteSecretACLKeymanagerV1AclsResponse struct{
    DeleteResult acls.DeleteResult
}

func NewDeleteSecretACLKeymanagerV1AclsResponse(deleteResult acls.DeleteResult,)*DeleteSecretACLKeymanagerV1AclsResponse {
    return &DeleteSecretACLKeymanagerV1AclsResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteSecretACLKeymanagerV1Acls(req *DeleteSecretACLKeymanagerV1AclsRequest)(*DeleteSecretACLKeymanagerV1AclsResponse){
    return NewDeleteSecretACLKeymanagerV1AclsResponse(acls.DeleteSecretACL(oc.Client,req.SecretID, ))

}