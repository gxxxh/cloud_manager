package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/networking/v2/extensions/qos/rules"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the ListBandwidthLimitRulesNetworkingV2ExtensionsQosRules
type ListBandwidthLimitRulesNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    Opts rules.BandwidthLimitRulesListOptsBuilder
}

func NewListBandwidthLimitRulesNetworkingV2ExtensionsQosRulesRequest()*ListBandwidthLimitRulesNetworkingV2ExtensionsQosRulesRequest{
    return &ListBandwidthLimitRulesNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the ListBandwidthLimitRulesNetworkingV2ExtensionsQosRules
type ListBandwidthLimitRulesNetworkingV2ExtensionsQosRulesResponse struct{
    Pager pagination.Pager
}

func NewListBandwidthLimitRulesNetworkingV2ExtensionsQosRulesResponse(pager pagination.Pager,)*ListBandwidthLimitRulesNetworkingV2ExtensionsQosRulesResponse {
    return &ListBandwidthLimitRulesNetworkingV2ExtensionsQosRulesResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListBandwidthLimitRulesNetworkingV2ExtensionsQosRules(req *ListBandwidthLimitRulesNetworkingV2ExtensionsQosRulesRequest)(*ListBandwidthLimitRulesNetworkingV2ExtensionsQosRulesResponse){
    return NewListBandwidthLimitRulesNetworkingV2ExtensionsQosRulesResponse(rules.ListBandwidthLimitRules(oc.client,req.PolicyID,req.Opts, ))

}
//request struct for the GetBandwidthLimitRuleNetworkingV2ExtensionsQosRules
type GetBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    RuleID string
}

func NewGetBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest()*GetBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest{
    return &GetBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the GetBandwidthLimitRuleNetworkingV2ExtensionsQosRules
type GetBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse struct{
    GetBandwidthLimitRuleResult rules.GetBandwidthLimitRuleResult
}

func NewGetBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse(getBandwidthLimitRuleResult rules.GetBandwidthLimitRuleResult,)*GetBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse {
    return &GetBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse{
            GetBandwidthLimitRuleResult:getBandwidthLimitRuleResult,
    }
}

// action function
func (oc *OpenstackClient) GetBandwidthLimitRuleNetworkingV2ExtensionsQosRules(req *GetBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest)(*GetBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse){
    return NewGetBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse(rules.GetBandwidthLimitRule(oc.client,req.PolicyID,req.RuleID, ))

}
//request struct for the CreateBandwidthLimitRuleNetworkingV2ExtensionsQosRules
type CreateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    Opts rules.CreateBandwidthLimitRuleOptsBuilder
}

func NewCreateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest()*CreateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest{
    return &CreateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the CreateBandwidthLimitRuleNetworkingV2ExtensionsQosRules
type CreateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse struct{
    CreateBandwidthLimitRuleResult rules.CreateBandwidthLimitRuleResult
}

func NewCreateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse(createBandwidthLimitRuleResult rules.CreateBandwidthLimitRuleResult,)*CreateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse {
    return &CreateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse{
            CreateBandwidthLimitRuleResult:createBandwidthLimitRuleResult,
    }
}

// action function
func (oc *OpenstackClient) CreateBandwidthLimitRuleNetworkingV2ExtensionsQosRules(req *CreateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest)(*CreateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse){
    return NewCreateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse(rules.CreateBandwidthLimitRule(oc.client,req.PolicyID,req.Opts, ))

}
//request struct for the UpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRules
type UpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    RuleID string
    Opts rules.UpdateBandwidthLimitRuleOptsBuilder
}

func NewUpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest()*UpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest{
    return &UpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the UpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRules
type UpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse struct{
    UpdateBandwidthLimitRuleResult rules.UpdateBandwidthLimitRuleResult
}

func NewUpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse(updateBandwidthLimitRuleResult rules.UpdateBandwidthLimitRuleResult,)*UpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse {
    return &UpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse{
            UpdateBandwidthLimitRuleResult:updateBandwidthLimitRuleResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRules(req *UpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest)(*UpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse){
    return NewUpdateBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse(rules.UpdateBandwidthLimitRule(oc.client,req.PolicyID,req.RuleID,req.Opts, ))

}
//request struct for the DeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRules
type DeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    RuleID string
}

func NewDeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest()*DeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest{
    return &DeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the DeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRules
type DeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse struct{
    DeleteBandwidthLimitRuleResult rules.DeleteBandwidthLimitRuleResult
}

func NewDeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse(deleteBandwidthLimitRuleResult rules.DeleteBandwidthLimitRuleResult,)*DeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse {
    return &DeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse{
            DeleteBandwidthLimitRuleResult:deleteBandwidthLimitRuleResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRules(req *DeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRulesRequest)(*DeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse){
    return NewDeleteBandwidthLimitRuleNetworkingV2ExtensionsQosRulesResponse(rules.DeleteBandwidthLimitRule(oc.client,req.PolicyID,req.RuleID, ))

}
//request struct for the ListDSCPMarkingRulesNetworkingV2ExtensionsQosRules
type ListDSCPMarkingRulesNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    Opts rules.DSCPMarkingRulesListOptsBuilder
}

func NewListDSCPMarkingRulesNetworkingV2ExtensionsQosRulesRequest()*ListDSCPMarkingRulesNetworkingV2ExtensionsQosRulesRequest{
    return &ListDSCPMarkingRulesNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the ListDSCPMarkingRulesNetworkingV2ExtensionsQosRules
type ListDSCPMarkingRulesNetworkingV2ExtensionsQosRulesResponse struct{
    Pager pagination.Pager
}

func NewListDSCPMarkingRulesNetworkingV2ExtensionsQosRulesResponse(pager pagination.Pager,)*ListDSCPMarkingRulesNetworkingV2ExtensionsQosRulesResponse {
    return &ListDSCPMarkingRulesNetworkingV2ExtensionsQosRulesResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListDSCPMarkingRulesNetworkingV2ExtensionsQosRules(req *ListDSCPMarkingRulesNetworkingV2ExtensionsQosRulesRequest)(*ListDSCPMarkingRulesNetworkingV2ExtensionsQosRulesResponse){
    return NewListDSCPMarkingRulesNetworkingV2ExtensionsQosRulesResponse(rules.ListDSCPMarkingRules(oc.client,req.PolicyID,req.Opts, ))

}
//request struct for the GetDSCPMarkingRuleNetworkingV2ExtensionsQosRules
type GetDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    RuleID string
}

func NewGetDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest()*GetDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest{
    return &GetDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the GetDSCPMarkingRuleNetworkingV2ExtensionsQosRules
type GetDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse struct{
    GetDSCPMarkingRuleResult rules.GetDSCPMarkingRuleResult
}

func NewGetDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse(getDSCPMarkingRuleResult rules.GetDSCPMarkingRuleResult,)*GetDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse {
    return &GetDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse{
            GetDSCPMarkingRuleResult:getDSCPMarkingRuleResult,
    }
}

// action function
func (oc *OpenstackClient) GetDSCPMarkingRuleNetworkingV2ExtensionsQosRules(req *GetDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest)(*GetDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse){
    return NewGetDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse(rules.GetDSCPMarkingRule(oc.client,req.PolicyID,req.RuleID, ))

}
//request struct for the CreateDSCPMarkingRuleNetworkingV2ExtensionsQosRules
type CreateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    Opts rules.CreateDSCPMarkingRuleOptsBuilder
}

func NewCreateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest()*CreateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest{
    return &CreateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the CreateDSCPMarkingRuleNetworkingV2ExtensionsQosRules
type CreateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse struct{
    CreateDSCPMarkingRuleResult rules.CreateDSCPMarkingRuleResult
}

func NewCreateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse(createDSCPMarkingRuleResult rules.CreateDSCPMarkingRuleResult,)*CreateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse {
    return &CreateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse{
            CreateDSCPMarkingRuleResult:createDSCPMarkingRuleResult,
    }
}

// action function
func (oc *OpenstackClient) CreateDSCPMarkingRuleNetworkingV2ExtensionsQosRules(req *CreateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest)(*CreateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse){
    return NewCreateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse(rules.CreateDSCPMarkingRule(oc.client,req.PolicyID,req.Opts, ))

}
//request struct for the UpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRules
type UpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    RuleID string
    Opts rules.UpdateDSCPMarkingRuleOptsBuilder
}

func NewUpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest()*UpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest{
    return &UpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the UpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRules
type UpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse struct{
    UpdateDSCPMarkingRuleResult rules.UpdateDSCPMarkingRuleResult
}

func NewUpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse(updateDSCPMarkingRuleResult rules.UpdateDSCPMarkingRuleResult,)*UpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse {
    return &UpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse{
            UpdateDSCPMarkingRuleResult:updateDSCPMarkingRuleResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRules(req *UpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest)(*UpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse){
    return NewUpdateDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse(rules.UpdateDSCPMarkingRule(oc.client,req.PolicyID,req.RuleID,req.Opts, ))

}
//request struct for the DeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRules
type DeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    RuleID string
}

func NewDeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest()*DeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest{
    return &DeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the DeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRules
type DeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse struct{
    DeleteDSCPMarkingRuleResult rules.DeleteDSCPMarkingRuleResult
}

func NewDeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse(deleteDSCPMarkingRuleResult rules.DeleteDSCPMarkingRuleResult,)*DeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse {
    return &DeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse{
            DeleteDSCPMarkingRuleResult:deleteDSCPMarkingRuleResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRules(req *DeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRulesRequest)(*DeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse){
    return NewDeleteDSCPMarkingRuleNetworkingV2ExtensionsQosRulesResponse(rules.DeleteDSCPMarkingRule(oc.client,req.PolicyID,req.RuleID, ))

}
//request struct for the ListMinimumBandwidthRulesNetworkingV2ExtensionsQosRules
type ListMinimumBandwidthRulesNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    Opts rules.MinimumBandwidthRulesListOptsBuilder
}

func NewListMinimumBandwidthRulesNetworkingV2ExtensionsQosRulesRequest()*ListMinimumBandwidthRulesNetworkingV2ExtensionsQosRulesRequest{
    return &ListMinimumBandwidthRulesNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the ListMinimumBandwidthRulesNetworkingV2ExtensionsQosRules
type ListMinimumBandwidthRulesNetworkingV2ExtensionsQosRulesResponse struct{
    Pager pagination.Pager
}

func NewListMinimumBandwidthRulesNetworkingV2ExtensionsQosRulesResponse(pager pagination.Pager,)*ListMinimumBandwidthRulesNetworkingV2ExtensionsQosRulesResponse {
    return &ListMinimumBandwidthRulesNetworkingV2ExtensionsQosRulesResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListMinimumBandwidthRulesNetworkingV2ExtensionsQosRules(req *ListMinimumBandwidthRulesNetworkingV2ExtensionsQosRulesRequest)(*ListMinimumBandwidthRulesNetworkingV2ExtensionsQosRulesResponse){
    return NewListMinimumBandwidthRulesNetworkingV2ExtensionsQosRulesResponse(rules.ListMinimumBandwidthRules(oc.client,req.PolicyID,req.Opts, ))

}
//request struct for the GetMinimumBandwidthRuleNetworkingV2ExtensionsQosRules
type GetMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    RuleID string
}

func NewGetMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest()*GetMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest{
    return &GetMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the GetMinimumBandwidthRuleNetworkingV2ExtensionsQosRules
type GetMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse struct{
    GetMinimumBandwidthRuleResult rules.GetMinimumBandwidthRuleResult
}

func NewGetMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse(getMinimumBandwidthRuleResult rules.GetMinimumBandwidthRuleResult,)*GetMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse {
    return &GetMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse{
            GetMinimumBandwidthRuleResult:getMinimumBandwidthRuleResult,
    }
}

// action function
func (oc *OpenstackClient) GetMinimumBandwidthRuleNetworkingV2ExtensionsQosRules(req *GetMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest)(*GetMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse){
    return NewGetMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse(rules.GetMinimumBandwidthRule(oc.client,req.PolicyID,req.RuleID, ))

}
//request struct for the CreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRules
type CreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    Opts rules.CreateMinimumBandwidthRuleOptsBuilder
}

func NewCreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest()*CreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest{
    return &CreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the CreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRules
type CreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse struct{
    CreateMinimumBandwidthRuleResult rules.CreateMinimumBandwidthRuleResult
}

func NewCreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse(createMinimumBandwidthRuleResult rules.CreateMinimumBandwidthRuleResult,)*CreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse {
    return &CreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse{
            CreateMinimumBandwidthRuleResult:createMinimumBandwidthRuleResult,
    }
}

// action function
func (oc *OpenstackClient) CreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRules(req *CreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest)(*CreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse){
    return NewCreateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse(rules.CreateMinimumBandwidthRule(oc.client,req.PolicyID,req.Opts, ))

}
//request struct for the UpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRules
type UpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    RuleID string
    Opts rules.UpdateMinimumBandwidthRuleOptsBuilder
}

func NewUpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest()*UpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest{
    return &UpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the UpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRules
type UpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse struct{
    UpdateMinimumBandwidthRuleResult rules.UpdateMinimumBandwidthRuleResult
}

func NewUpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse(updateMinimumBandwidthRuleResult rules.UpdateMinimumBandwidthRuleResult,)*UpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse {
    return &UpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse{
            UpdateMinimumBandwidthRuleResult:updateMinimumBandwidthRuleResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRules(req *UpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest)(*UpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse){
    return NewUpdateMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse(rules.UpdateMinimumBandwidthRule(oc.client,req.PolicyID,req.RuleID,req.Opts, ))

}
//request struct for the DeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRules
type DeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest struct{
    PolicyID string
    RuleID string
}

func NewDeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest()*DeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest{
    return &DeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest{}
}

//response struct for the DeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRules
type DeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse struct{
    DeleteMinimumBandwidthRuleResult rules.DeleteMinimumBandwidthRuleResult
}

func NewDeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse(deleteMinimumBandwidthRuleResult rules.DeleteMinimumBandwidthRuleResult,)*DeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse {
    return &DeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse{
            DeleteMinimumBandwidthRuleResult:deleteMinimumBandwidthRuleResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRules(req *DeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesRequest)(*DeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse){
    return NewDeleteMinimumBandwidthRuleNetworkingV2ExtensionsQosRulesResponse(rules.DeleteMinimumBandwidthRule(oc.client,req.PolicyID,req.RuleID, ))

}