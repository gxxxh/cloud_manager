package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/blockstorage/extensions/volumeactions"
)
//request struct for the AttachBlockstorageExtensionsVolumeactions
type AttachBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
    Opts volumeactions.AttachOptsBuilder
}

func NewAttachBlockstorageExtensionsVolumeactionsRequest()*AttachBlockstorageExtensionsVolumeactionsRequest{
    return &AttachBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the AttachBlockstorageExtensionsVolumeactions
type AttachBlockstorageExtensionsVolumeactionsResponse struct{
    AttachResult volumeactions.AttachResult
}

func NewAttachBlockstorageExtensionsVolumeactionsResponse(attachResult volumeactions.AttachResult,)*AttachBlockstorageExtensionsVolumeactionsResponse {
    return &AttachBlockstorageExtensionsVolumeactionsResponse{
            AttachResult:attachResult,
    }
}

// action function
func (oc *OpenstackClient) AttachBlockstorageExtensionsVolumeactions(request *AttachBlockstorageExtensionsVolumeactionsRequest)(*AttachBlockstorageExtensionsVolumeactionsResponse){
    return NewAttachBlockstorageExtensionsVolumeactionsResponse(volumeactions.Attach(oc.client,request.Id,request.Opts, ))

}
//request struct for the BeginDetachingBlockstorageExtensionsVolumeactions
type BeginDetachingBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
}

func NewBeginDetachingBlockstorageExtensionsVolumeactionsRequest()*BeginDetachingBlockstorageExtensionsVolumeactionsRequest{
    return &BeginDetachingBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the BeginDetachingBlockstorageExtensionsVolumeactions
type BeginDetachingBlockstorageExtensionsVolumeactionsResponse struct{
    BeginDetachingResult volumeactions.BeginDetachingResult
}

func NewBeginDetachingBlockstorageExtensionsVolumeactionsResponse(beginDetachingResult volumeactions.BeginDetachingResult,)*BeginDetachingBlockstorageExtensionsVolumeactionsResponse {
    return &BeginDetachingBlockstorageExtensionsVolumeactionsResponse{
            BeginDetachingResult:beginDetachingResult,
    }
}

// action function
func (oc *OpenstackClient) BeginDetachingBlockstorageExtensionsVolumeactions(request *BeginDetachingBlockstorageExtensionsVolumeactionsRequest)(*BeginDetachingBlockstorageExtensionsVolumeactionsResponse){
    return NewBeginDetachingBlockstorageExtensionsVolumeactionsResponse(volumeactions.BeginDetaching(oc.client,request.Id, ))

}
//request struct for the DetachBlockstorageExtensionsVolumeactions
type DetachBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
    Opts volumeactions.DetachOptsBuilder
}

func NewDetachBlockstorageExtensionsVolumeactionsRequest()*DetachBlockstorageExtensionsVolumeactionsRequest{
    return &DetachBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the DetachBlockstorageExtensionsVolumeactions
type DetachBlockstorageExtensionsVolumeactionsResponse struct{
    DetachResult volumeactions.DetachResult
}

func NewDetachBlockstorageExtensionsVolumeactionsResponse(detachResult volumeactions.DetachResult,)*DetachBlockstorageExtensionsVolumeactionsResponse {
    return &DetachBlockstorageExtensionsVolumeactionsResponse{
            DetachResult:detachResult,
    }
}

// action function
func (oc *OpenstackClient) DetachBlockstorageExtensionsVolumeactions(request *DetachBlockstorageExtensionsVolumeactionsRequest)(*DetachBlockstorageExtensionsVolumeactionsResponse){
    return NewDetachBlockstorageExtensionsVolumeactionsResponse(volumeactions.Detach(oc.client,request.Id,request.Opts, ))

}
//request struct for the ReserveBlockstorageExtensionsVolumeactions
type ReserveBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
}

func NewReserveBlockstorageExtensionsVolumeactionsRequest()*ReserveBlockstorageExtensionsVolumeactionsRequest{
    return &ReserveBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the ReserveBlockstorageExtensionsVolumeactions
type ReserveBlockstorageExtensionsVolumeactionsResponse struct{
    ReserveResult volumeactions.ReserveResult
}

func NewReserveBlockstorageExtensionsVolumeactionsResponse(reserveResult volumeactions.ReserveResult,)*ReserveBlockstorageExtensionsVolumeactionsResponse {
    return &ReserveBlockstorageExtensionsVolumeactionsResponse{
            ReserveResult:reserveResult,
    }
}

// action function
func (oc *OpenstackClient) ReserveBlockstorageExtensionsVolumeactions(request *ReserveBlockstorageExtensionsVolumeactionsRequest)(*ReserveBlockstorageExtensionsVolumeactionsResponse){
    return NewReserveBlockstorageExtensionsVolumeactionsResponse(volumeactions.Reserve(oc.client,request.Id, ))

}
//request struct for the UnreserveBlockstorageExtensionsVolumeactions
type UnreserveBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
}

func NewUnreserveBlockstorageExtensionsVolumeactionsRequest()*UnreserveBlockstorageExtensionsVolumeactionsRequest{
    return &UnreserveBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the UnreserveBlockstorageExtensionsVolumeactions
type UnreserveBlockstorageExtensionsVolumeactionsResponse struct{
    UnreserveResult volumeactions.UnreserveResult
}

func NewUnreserveBlockstorageExtensionsVolumeactionsResponse(unreserveResult volumeactions.UnreserveResult,)*UnreserveBlockstorageExtensionsVolumeactionsResponse {
    return &UnreserveBlockstorageExtensionsVolumeactionsResponse{
            UnreserveResult:unreserveResult,
    }
}

// action function
func (oc *OpenstackClient) UnreserveBlockstorageExtensionsVolumeactions(request *UnreserveBlockstorageExtensionsVolumeactionsRequest)(*UnreserveBlockstorageExtensionsVolumeactionsResponse){
    return NewUnreserveBlockstorageExtensionsVolumeactionsResponse(volumeactions.Unreserve(oc.client,request.Id, ))

}
//request struct for the InitializeConnectionBlockstorageExtensionsVolumeactions
type InitializeConnectionBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
    Opts volumeactions.InitializeConnectionOptsBuilder
}

func NewInitializeConnectionBlockstorageExtensionsVolumeactionsRequest()*InitializeConnectionBlockstorageExtensionsVolumeactionsRequest{
    return &InitializeConnectionBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the InitializeConnectionBlockstorageExtensionsVolumeactions
type InitializeConnectionBlockstorageExtensionsVolumeactionsResponse struct{
    InitializeConnectionResult volumeactions.InitializeConnectionResult
}

func NewInitializeConnectionBlockstorageExtensionsVolumeactionsResponse(initializeConnectionResult volumeactions.InitializeConnectionResult,)*InitializeConnectionBlockstorageExtensionsVolumeactionsResponse {
    return &InitializeConnectionBlockstorageExtensionsVolumeactionsResponse{
            InitializeConnectionResult:initializeConnectionResult,
    }
}

// action function
func (oc *OpenstackClient) InitializeConnectionBlockstorageExtensionsVolumeactions(request *InitializeConnectionBlockstorageExtensionsVolumeactionsRequest)(*InitializeConnectionBlockstorageExtensionsVolumeactionsResponse){
    return NewInitializeConnectionBlockstorageExtensionsVolumeactionsResponse(volumeactions.InitializeConnection(oc.client,request.Id,request.Opts, ))

}
//request struct for the TerminateConnectionBlockstorageExtensionsVolumeactions
type TerminateConnectionBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
    Opts volumeactions.TerminateConnectionOptsBuilder
}

func NewTerminateConnectionBlockstorageExtensionsVolumeactionsRequest()*TerminateConnectionBlockstorageExtensionsVolumeactionsRequest{
    return &TerminateConnectionBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the TerminateConnectionBlockstorageExtensionsVolumeactions
type TerminateConnectionBlockstorageExtensionsVolumeactionsResponse struct{
    TerminateConnectionResult volumeactions.TerminateConnectionResult
}

func NewTerminateConnectionBlockstorageExtensionsVolumeactionsResponse(terminateConnectionResult volumeactions.TerminateConnectionResult,)*TerminateConnectionBlockstorageExtensionsVolumeactionsResponse {
    return &TerminateConnectionBlockstorageExtensionsVolumeactionsResponse{
            TerminateConnectionResult:terminateConnectionResult,
    }
}

// action function
func (oc *OpenstackClient) TerminateConnectionBlockstorageExtensionsVolumeactions(request *TerminateConnectionBlockstorageExtensionsVolumeactionsRequest)(*TerminateConnectionBlockstorageExtensionsVolumeactionsResponse){
    return NewTerminateConnectionBlockstorageExtensionsVolumeactionsResponse(volumeactions.TerminateConnection(oc.client,request.Id,request.Opts, ))

}
//request struct for the ExtendSizeBlockstorageExtensionsVolumeactions
type ExtendSizeBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
    Opts volumeactions.ExtendSizeOptsBuilder
}

func NewExtendSizeBlockstorageExtensionsVolumeactionsRequest()*ExtendSizeBlockstorageExtensionsVolumeactionsRequest{
    return &ExtendSizeBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the ExtendSizeBlockstorageExtensionsVolumeactions
type ExtendSizeBlockstorageExtensionsVolumeactionsResponse struct{
    ExtendSizeResult volumeactions.ExtendSizeResult
}

func NewExtendSizeBlockstorageExtensionsVolumeactionsResponse(extendSizeResult volumeactions.ExtendSizeResult,)*ExtendSizeBlockstorageExtensionsVolumeactionsResponse {
    return &ExtendSizeBlockstorageExtensionsVolumeactionsResponse{
            ExtendSizeResult:extendSizeResult,
    }
}

// action function
func (oc *OpenstackClient) ExtendSizeBlockstorageExtensionsVolumeactions(request *ExtendSizeBlockstorageExtensionsVolumeactionsRequest)(*ExtendSizeBlockstorageExtensionsVolumeactionsResponse){
    return NewExtendSizeBlockstorageExtensionsVolumeactionsResponse(volumeactions.ExtendSize(oc.client,request.Id,request.Opts, ))

}
//request struct for the UploadImageBlockstorageExtensionsVolumeactions
type UploadImageBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
    Opts volumeactions.UploadImageOptsBuilder
}

func NewUploadImageBlockstorageExtensionsVolumeactionsRequest()*UploadImageBlockstorageExtensionsVolumeactionsRequest{
    return &UploadImageBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the UploadImageBlockstorageExtensionsVolumeactions
type UploadImageBlockstorageExtensionsVolumeactionsResponse struct{
    UploadImageResult volumeactions.UploadImageResult
}

func NewUploadImageBlockstorageExtensionsVolumeactionsResponse(uploadImageResult volumeactions.UploadImageResult,)*UploadImageBlockstorageExtensionsVolumeactionsResponse {
    return &UploadImageBlockstorageExtensionsVolumeactionsResponse{
            UploadImageResult:uploadImageResult,
    }
}

// action function
func (oc *OpenstackClient) UploadImageBlockstorageExtensionsVolumeactions(request *UploadImageBlockstorageExtensionsVolumeactionsRequest)(*UploadImageBlockstorageExtensionsVolumeactionsResponse){
    return NewUploadImageBlockstorageExtensionsVolumeactionsResponse(volumeactions.UploadImage(oc.client,request.Id,request.Opts, ))

}
//request struct for the ForceDeleteBlockstorageExtensionsVolumeactions
type ForceDeleteBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
}

func NewForceDeleteBlockstorageExtensionsVolumeactionsRequest()*ForceDeleteBlockstorageExtensionsVolumeactionsRequest{
    return &ForceDeleteBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the ForceDeleteBlockstorageExtensionsVolumeactions
type ForceDeleteBlockstorageExtensionsVolumeactionsResponse struct{
    ForceDeleteResult volumeactions.ForceDeleteResult
}

func NewForceDeleteBlockstorageExtensionsVolumeactionsResponse(forceDeleteResult volumeactions.ForceDeleteResult,)*ForceDeleteBlockstorageExtensionsVolumeactionsResponse {
    return &ForceDeleteBlockstorageExtensionsVolumeactionsResponse{
            ForceDeleteResult:forceDeleteResult,
    }
}

// action function
func (oc *OpenstackClient) ForceDeleteBlockstorageExtensionsVolumeactions(request *ForceDeleteBlockstorageExtensionsVolumeactionsRequest)(*ForceDeleteBlockstorageExtensionsVolumeactionsResponse){
    return NewForceDeleteBlockstorageExtensionsVolumeactionsResponse(volumeactions.ForceDelete(oc.client,request.Id, ))

}
//request struct for the SetImageMetadataBlockstorageExtensionsVolumeactions
type SetImageMetadataBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
    Opts volumeactions.ImageMetadataOptsBuilder
}

func NewSetImageMetadataBlockstorageExtensionsVolumeactionsRequest()*SetImageMetadataBlockstorageExtensionsVolumeactionsRequest{
    return &SetImageMetadataBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the SetImageMetadataBlockstorageExtensionsVolumeactions
type SetImageMetadataBlockstorageExtensionsVolumeactionsResponse struct{
    SetImageMetadataResult volumeactions.SetImageMetadataResult
}

func NewSetImageMetadataBlockstorageExtensionsVolumeactionsResponse(setImageMetadataResult volumeactions.SetImageMetadataResult,)*SetImageMetadataBlockstorageExtensionsVolumeactionsResponse {
    return &SetImageMetadataBlockstorageExtensionsVolumeactionsResponse{
            SetImageMetadataResult:setImageMetadataResult,
    }
}

// action function
func (oc *OpenstackClient) SetImageMetadataBlockstorageExtensionsVolumeactions(request *SetImageMetadataBlockstorageExtensionsVolumeactionsRequest)(*SetImageMetadataBlockstorageExtensionsVolumeactionsResponse){
    return NewSetImageMetadataBlockstorageExtensionsVolumeactionsResponse(volumeactions.SetImageMetadata(oc.client,request.Id,request.Opts, ))

}
//request struct for the SetBootableBlockstorageExtensionsVolumeactions
type SetBootableBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
    Opts volumeactions.BootableOpts
}

func NewSetBootableBlockstorageExtensionsVolumeactionsRequest()*SetBootableBlockstorageExtensionsVolumeactionsRequest{
    return &SetBootableBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the SetBootableBlockstorageExtensionsVolumeactions
type SetBootableBlockstorageExtensionsVolumeactionsResponse struct{
    SetBootableResult volumeactions.SetBootableResult
}

func NewSetBootableBlockstorageExtensionsVolumeactionsResponse(setBootableResult volumeactions.SetBootableResult,)*SetBootableBlockstorageExtensionsVolumeactionsResponse {
    return &SetBootableBlockstorageExtensionsVolumeactionsResponse{
            SetBootableResult:setBootableResult,
    }
}

// action function
func (oc *OpenstackClient) SetBootableBlockstorageExtensionsVolumeactions(request *SetBootableBlockstorageExtensionsVolumeactionsRequest)(*SetBootableBlockstorageExtensionsVolumeactionsResponse){
    return NewSetBootableBlockstorageExtensionsVolumeactionsResponse(volumeactions.SetBootable(oc.client,request.Id,request.Opts, ))

}
//request struct for the ChangeTypeBlockstorageExtensionsVolumeactions
type ChangeTypeBlockstorageExtensionsVolumeactionsRequest struct{
    Id string
    Opts volumeactions.ChangeTypeOptsBuilder
}

func NewChangeTypeBlockstorageExtensionsVolumeactionsRequest()*ChangeTypeBlockstorageExtensionsVolumeactionsRequest{
    return &ChangeTypeBlockstorageExtensionsVolumeactionsRequest{}
}

//response struct for the ChangeTypeBlockstorageExtensionsVolumeactions
type ChangeTypeBlockstorageExtensionsVolumeactionsResponse struct{
    ChangeTypeResult volumeactions.ChangeTypeResult
}

func NewChangeTypeBlockstorageExtensionsVolumeactionsResponse(changeTypeResult volumeactions.ChangeTypeResult,)*ChangeTypeBlockstorageExtensionsVolumeactionsResponse {
    return &ChangeTypeBlockstorageExtensionsVolumeactionsResponse{
            ChangeTypeResult:changeTypeResult,
    }
}

// action function
func (oc *OpenstackClient) ChangeTypeBlockstorageExtensionsVolumeactions(request *ChangeTypeBlockstorageExtensionsVolumeactionsRequest)(*ChangeTypeBlockstorageExtensionsVolumeactionsResponse){
    return NewChangeTypeBlockstorageExtensionsVolumeactionsResponse(volumeactions.ChangeType(oc.client,request.Id,request.Opts, ))

}