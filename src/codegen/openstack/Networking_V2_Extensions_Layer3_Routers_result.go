package openstack

// Code generated by cloud manager.

import (
	"github.com/gophercloud/gophercloud/openstack/networking/v2/extensions/layer3/routers"
)

// extract response info from pager for ListNetworkingV2ExtensionsLayer3Routers
func ExtractListNetworkingV2ExtensionsLayer3RoutersResponse(response *ListNetworkingV2ExtensionsLayer3RoutersResponse) ([]routers.Router, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return routers.ExtractRouters(page)
}

// call result's extract function
func ExtractCreateNetworkingV2ExtensionsLayer3RoutersResponse(response *CreateNetworkingV2ExtensionsLayer3RoutersResponse) (interface{}, error) {
	return response.CreateResult.Body, response.CreateResult.Err
}

// call result's extract function
func ExtractGetNetworkingV2ExtensionsLayer3RoutersResponse(response *GetNetworkingV2ExtensionsLayer3RoutersResponse) (interface{}, error) {
	return response.GetResult.Body, response.GetResult.Err
}

// call result's extract function
func ExtractUpdateNetworkingV2ExtensionsLayer3RoutersResponse(response *UpdateNetworkingV2ExtensionsLayer3RoutersResponse) (interface{}, error) {
	return response.UpdateResult.Body, response.UpdateResult.Err
}

// call result's extract function
func ExtractDeleteNetworkingV2ExtensionsLayer3RoutersResponse(response *DeleteNetworkingV2ExtensionsLayer3RoutersResponse) (interface{}, error) {
	return response.DeleteResult.Body, response.DeleteResult.Err
}

// call result's extract function
func ExtractAddInterfaceNetworkingV2ExtensionsLayer3RoutersResponse(response *AddInterfaceNetworkingV2ExtensionsLayer3RoutersResponse) (interface{}, error) {
	return response.InterfaceResult.Body, response.InterfaceResult.Err
}

// call result's extract function
func ExtractRemoveInterfaceNetworkingV2ExtensionsLayer3RoutersResponse(response *RemoveInterfaceNetworkingV2ExtensionsLayer3RoutersResponse) (interface{}, error) {
	return response.InterfaceResult.Body, response.InterfaceResult.Err
}

// extract response info from pager for ListL3AgentsNetworkingV2ExtensionsLayer3Routers
func ExtractListL3AgentsNetworkingV2ExtensionsLayer3RoutersResponse(response *ListL3AgentsNetworkingV2ExtensionsLayer3RoutersResponse) ([]routers.L3Agent, error) {
	page, err := response.Pager.AllPages()
	if err != nil {
		return nil, err
	}
	return routers.ExtractL3Agents(page)
}
