package openstack

// Code generated by cloud manager.





import (
    "github.com/gophercloud/gophercloud/openstack/networking/v2/extensions/lbaas/pools"
    "github.com/gophercloud/gophercloud/pagination"
)
//request struct for the ListNetworkingV2ExtensionsLbaasPools
type ListNetworkingV2ExtensionsLbaasPoolsRequest struct{
    Opts pools.ListOpts
}

func NewListNetworkingV2ExtensionsLbaasPoolsRequest()*ListNetworkingV2ExtensionsLbaasPoolsRequest{
    return &ListNetworkingV2ExtensionsLbaasPoolsRequest{}
}

//response struct for the ListNetworkingV2ExtensionsLbaasPools
type ListNetworkingV2ExtensionsLbaasPoolsResponse struct{
    Pager pagination.Pager
}

func NewListNetworkingV2ExtensionsLbaasPoolsResponse(pager pagination.Pager,)*ListNetworkingV2ExtensionsLbaasPoolsResponse {
    return &ListNetworkingV2ExtensionsLbaasPoolsResponse{
            Pager:pager,
    }
}

// action function
func (oc *OpenstackClient) ListNetworkingV2ExtensionsLbaasPools(request *ListNetworkingV2ExtensionsLbaasPoolsRequest)(*ListNetworkingV2ExtensionsLbaasPoolsResponse){
    return NewListNetworkingV2ExtensionsLbaasPoolsResponse(pools.List(oc.client,request.Opts, ))

}
//request struct for the CreateNetworkingV2ExtensionsLbaasPools
type CreateNetworkingV2ExtensionsLbaasPoolsRequest struct{
    Opts pools.CreateOptsBuilder
}

func NewCreateNetworkingV2ExtensionsLbaasPoolsRequest()*CreateNetworkingV2ExtensionsLbaasPoolsRequest{
    return &CreateNetworkingV2ExtensionsLbaasPoolsRequest{}
}

//response struct for the CreateNetworkingV2ExtensionsLbaasPools
type CreateNetworkingV2ExtensionsLbaasPoolsResponse struct{
    CreateResult pools.CreateResult
}

func NewCreateNetworkingV2ExtensionsLbaasPoolsResponse(createResult pools.CreateResult,)*CreateNetworkingV2ExtensionsLbaasPoolsResponse {
    return &CreateNetworkingV2ExtensionsLbaasPoolsResponse{
            CreateResult:createResult,
    }
}

// action function
func (oc *OpenstackClient) CreateNetworkingV2ExtensionsLbaasPools(request *CreateNetworkingV2ExtensionsLbaasPoolsRequest)(*CreateNetworkingV2ExtensionsLbaasPoolsResponse){
    return NewCreateNetworkingV2ExtensionsLbaasPoolsResponse(pools.Create(oc.client,request.Opts, ))

}
//request struct for the GetNetworkingV2ExtensionsLbaasPools
type GetNetworkingV2ExtensionsLbaasPoolsRequest struct{
    Id string
}

func NewGetNetworkingV2ExtensionsLbaasPoolsRequest()*GetNetworkingV2ExtensionsLbaasPoolsRequest{
    return &GetNetworkingV2ExtensionsLbaasPoolsRequest{}
}

//response struct for the GetNetworkingV2ExtensionsLbaasPools
type GetNetworkingV2ExtensionsLbaasPoolsResponse struct{
    GetResult pools.GetResult
}

func NewGetNetworkingV2ExtensionsLbaasPoolsResponse(getResult pools.GetResult,)*GetNetworkingV2ExtensionsLbaasPoolsResponse {
    return &GetNetworkingV2ExtensionsLbaasPoolsResponse{
            GetResult:getResult,
    }
}

// action function
func (oc *OpenstackClient) GetNetworkingV2ExtensionsLbaasPools(request *GetNetworkingV2ExtensionsLbaasPoolsRequest)(*GetNetworkingV2ExtensionsLbaasPoolsResponse){
    return NewGetNetworkingV2ExtensionsLbaasPoolsResponse(pools.Get(oc.client,request.Id, ))

}
//request struct for the UpdateNetworkingV2ExtensionsLbaasPools
type UpdateNetworkingV2ExtensionsLbaasPoolsRequest struct{
    Id string
    Opts pools.UpdateOptsBuilder
}

func NewUpdateNetworkingV2ExtensionsLbaasPoolsRequest()*UpdateNetworkingV2ExtensionsLbaasPoolsRequest{
    return &UpdateNetworkingV2ExtensionsLbaasPoolsRequest{}
}

//response struct for the UpdateNetworkingV2ExtensionsLbaasPools
type UpdateNetworkingV2ExtensionsLbaasPoolsResponse struct{
    UpdateResult pools.UpdateResult
}

func NewUpdateNetworkingV2ExtensionsLbaasPoolsResponse(updateResult pools.UpdateResult,)*UpdateNetworkingV2ExtensionsLbaasPoolsResponse {
    return &UpdateNetworkingV2ExtensionsLbaasPoolsResponse{
            UpdateResult:updateResult,
    }
}

// action function
func (oc *OpenstackClient) UpdateNetworkingV2ExtensionsLbaasPools(request *UpdateNetworkingV2ExtensionsLbaasPoolsRequest)(*UpdateNetworkingV2ExtensionsLbaasPoolsResponse){
    return NewUpdateNetworkingV2ExtensionsLbaasPoolsResponse(pools.Update(oc.client,request.Id,request.Opts, ))

}
//request struct for the DeleteNetworkingV2ExtensionsLbaasPools
type DeleteNetworkingV2ExtensionsLbaasPoolsRequest struct{
    Id string
}

func NewDeleteNetworkingV2ExtensionsLbaasPoolsRequest()*DeleteNetworkingV2ExtensionsLbaasPoolsRequest{
    return &DeleteNetworkingV2ExtensionsLbaasPoolsRequest{}
}

//response struct for the DeleteNetworkingV2ExtensionsLbaasPools
type DeleteNetworkingV2ExtensionsLbaasPoolsResponse struct{
    DeleteResult pools.DeleteResult
}

func NewDeleteNetworkingV2ExtensionsLbaasPoolsResponse(deleteResult pools.DeleteResult,)*DeleteNetworkingV2ExtensionsLbaasPoolsResponse {
    return &DeleteNetworkingV2ExtensionsLbaasPoolsResponse{
            DeleteResult:deleteResult,
    }
}

// action function
func (oc *OpenstackClient) DeleteNetworkingV2ExtensionsLbaasPools(request *DeleteNetworkingV2ExtensionsLbaasPoolsRequest)(*DeleteNetworkingV2ExtensionsLbaasPoolsResponse){
    return NewDeleteNetworkingV2ExtensionsLbaasPoolsResponse(pools.Delete(oc.client,request.Id, ))

}
//request struct for the AssociateMonitorNetworkingV2ExtensionsLbaasPools
type AssociateMonitorNetworkingV2ExtensionsLbaasPoolsRequest struct{
    PoolID string
    MonitorID string
}

func NewAssociateMonitorNetworkingV2ExtensionsLbaasPoolsRequest()*AssociateMonitorNetworkingV2ExtensionsLbaasPoolsRequest{
    return &AssociateMonitorNetworkingV2ExtensionsLbaasPoolsRequest{}
}

//response struct for the AssociateMonitorNetworkingV2ExtensionsLbaasPools
type AssociateMonitorNetworkingV2ExtensionsLbaasPoolsResponse struct{
    AssociateResult pools.AssociateResult
}

func NewAssociateMonitorNetworkingV2ExtensionsLbaasPoolsResponse(associateResult pools.AssociateResult,)*AssociateMonitorNetworkingV2ExtensionsLbaasPoolsResponse {
    return &AssociateMonitorNetworkingV2ExtensionsLbaasPoolsResponse{
            AssociateResult:associateResult,
    }
}

// action function
func (oc *OpenstackClient) AssociateMonitorNetworkingV2ExtensionsLbaasPools(request *AssociateMonitorNetworkingV2ExtensionsLbaasPoolsRequest)(*AssociateMonitorNetworkingV2ExtensionsLbaasPoolsResponse){
    return NewAssociateMonitorNetworkingV2ExtensionsLbaasPoolsResponse(pools.AssociateMonitor(oc.client,request.PoolID,request.MonitorID, ))

}
//request struct for the DisassociateMonitorNetworkingV2ExtensionsLbaasPools
type DisassociateMonitorNetworkingV2ExtensionsLbaasPoolsRequest struct{
    PoolID string
    MonitorID string
}

func NewDisassociateMonitorNetworkingV2ExtensionsLbaasPoolsRequest()*DisassociateMonitorNetworkingV2ExtensionsLbaasPoolsRequest{
    return &DisassociateMonitorNetworkingV2ExtensionsLbaasPoolsRequest{}
}

//response struct for the DisassociateMonitorNetworkingV2ExtensionsLbaasPools
type DisassociateMonitorNetworkingV2ExtensionsLbaasPoolsResponse struct{
    AssociateResult pools.AssociateResult
}

func NewDisassociateMonitorNetworkingV2ExtensionsLbaasPoolsResponse(associateResult pools.AssociateResult,)*DisassociateMonitorNetworkingV2ExtensionsLbaasPoolsResponse {
    return &DisassociateMonitorNetworkingV2ExtensionsLbaasPoolsResponse{
            AssociateResult:associateResult,
    }
}

// action function
func (oc *OpenstackClient) DisassociateMonitorNetworkingV2ExtensionsLbaasPools(request *DisassociateMonitorNetworkingV2ExtensionsLbaasPoolsRequest)(*DisassociateMonitorNetworkingV2ExtensionsLbaasPoolsResponse){
    return NewDisassociateMonitorNetworkingV2ExtensionsLbaasPoolsResponse(pools.DisassociateMonitor(oc.client,request.PoolID,request.MonitorID, ))

}